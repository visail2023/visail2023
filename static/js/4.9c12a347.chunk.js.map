{"version":3,"sources":["constant/InsightType.js","insight_charts/caption/fact-templates-en/trend.js","insight_charts/caption/fact-templates-en/forecasting.js","insight_charts/caption/fact-templates-en/frequent_pattern.js","insight_charts/caption/fact-templates-en/seasonality.js","insight_charts/caption/fact-templates-en/univariate_outlier.js","insight_charts/caption/fact-templates-en/univariate_distribution.js","insight_charts/caption/fact-templates-en/similarity.js","insight_charts/caption/fact-templates-en/multivariate_outlier.js","insight_charts/caption/fact-templates-en/multivariate_distribution.js","insight_charts/caption/fact-templates-en/clustering.js","insight_charts/caption/fact-templates-en/autocorrelation.js","insight_charts/caption/fact-templates-en/outstanding.js","insight_charts/caption/fact-templates-en/index.js","insight_charts/caption/fact-templates-zh/trend.js","insight_charts/caption/fact-templates-zh/forecasting.js","insight_charts/caption/fact-templates-zh/frequent_pattern.js","insight_charts/caption/fact-templates-zh/seasonality.js","insight_charts/caption/fact-templates-zh/univariate_outlier.js","insight_charts/caption/fact-templates-zh/univariate_distribution.js","insight_charts/caption/fact-templates-zh/similarity.js","insight_charts/caption/fact-templates-zh/multivariate_outlier.js","insight_charts/caption/fact-templates-zh/multivariate_distribution.js","insight_charts/caption/fact-templates-zh/clustering.js","insight_charts/caption/fact-templates-zh/autocorrelation.js","insight_charts/caption/fact-templates-zh/outstanding.js","insight_charts/caption/fact-templates-zh/index.js","constant/AggregationType.js","constant/ActionCaption.js","constant/ActionCaptionZh.js","insight_charts/caption/index.js","constant/ActionType.js","constant/ActionTypeZh.js"],"names":["templates","pickFactTemplate","type","id","InsightType","trend","forecasting","frequent_pattern","seasonality","univariate_outlier","univariate_distribution","similarity","multivariate_outlier","multivariate_distribution","clustering","autocorrelation","outstanding","Math","floor","random","sentence","template","error","console","log","SUM","MAX","MIN","AVG","MEDIAN","COUNT","convertAggregation","aggType","langEn","AggregationType","NONE","converAction","action","ActionCaption","ActionCaptionZh","convertMeasure","measure","aggregate","field","toLowerCase","convertMultiMeasure","measures","hasBalineline","measureStr","baseline","measureList","i","length","text","push","includes","genFactSubspace","subspace","data","replace","genFactSentence","_fact","block","lang","langIsEn","fact","_","cloneDeep","pickFactTemplateZh","lineReg","focus","toString","insightFocus","ifSeasonal","interval","start1","end1","focuName","value","toFixed","result","start","end","resultDistribution","tempMean","maxMeanValue","maxMeanMeasure","indexOf","max","slice","toUpperCase"],"mappings":"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","file":"static/js/4.9c12a347.chunk.js","sourcesContent":["export default {\r\n    TREND: 'trend',\r\n    FORECASTING: 'forecasting',\r\n    FREQUENT_PATTERN: 'frequent_pattern',\r\n    SEASONALITY: 'seasonality',\r\n    UNIVARIATE_OUTLIER: 'univariate_outlier',\r\n    UNIVARIATE_DISTRIBUTION: 'univariate_distribution',\r\n    SIMILARITY: 'similarity',\r\n    MULTIVARIATE_OUTLIER: 'multivariate_outlier',\r\n    MULTIVARIATE_DISTRIBUTION: 'multivariate_distribution',\r\n    CLUSTRING: 'clustering',\r\n    OUTSTANDING:'outstanding',\r\n    AUTOCORRELATION:'autocorrelation'\r\n}","const templates = [\n    {\n        'id': 0,\n        'template': '{{action}}A clear {{parameter}} trend is observed in the {{agg}} {{measure}} between {{subspace0}} and {{subspace1}}.',\n    },\n    {\n        'id': 1,\n        'template': '{{action}}The {{parameter}} trend of {{agg}} {{measure}} is evident in the time range between {{subspace0}} and {{subspace1}}.',\n    },\n    {\n        'id': 2,\n        'template': '{{action}}A {{parameter}} trend is revealed in the {{agg}} {{measure}} between {{subspace0}} and {{subspace1}}.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': 'When {{subspace}}, in general, there is a {{positive/negative}} correlation between {{measure1}} and {{measure2}}.',\n    },\n    {\n        'id': 1,\n        'template': 'When {{subspace}}, in general, {{measure2}} has a {{positive/negative}} relationship with {{measure1}}.',\n    },\n    {\n        'id': 2,\n        'template': 'When {{subspace}}, in general, {{measure2}} has a {{positive/negative}} relationship with {{measure1}} (Pearson correlation coefficient = {{parameter}}).',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': '{{action}}The {{measure}} holds {{patterns}} patterns that resemble the time sequence between {{subspace0}} and {{subspace1}}.',\n    },\n    {\n        'id': 1,\n        'template': '{{action}}The {{measure}} reveals {{patterns}} patterns, similar to the time sequence between {{subspace0}} and {{subspace1}}.',\n    },\n    {\n        'id': 2,\n        'template': '{{action}}The {{measure}} displays {{patterns}} patterns, which follow the similar time subsequence as {{subspace0}} to {{subspace1}}.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': '{{action}}The {{parameter}} pattern of {{agg}} {{measure}} is evident between {{subspace0}} and {{subspace1}}, with {{seasonality}} seasonal periods observed throughout the whole time range.',\n    },\n    {\n        'id': 1,\n        'template': '{{action}}A {{parameter}} {{agg}} {{measure}} can be observed between {{subspace0}} and {{subspace1}}, with {{seasonality}} periods present in the whole time range.',\n    },\n    {\n        'id': 2,\n        'template': 'A {{parameter}} {{agg}} {{measure}} can be observed between {{subspace0}} and {{subspace1}}, with {{seasonality}} periods present in the whole time range.',\n    },\n]\n\nexport default templates;","// const templates = [\n//     {\n//         'id': 0,\n//         'template': '{{action}}Between {{subspace0}} and {{subspace1}}, the {{agg}} {{measure}} in {{focus}} has an outlier when compared with that of other values.',\n//     },\n//     {\n//         'id': 1,\n//         'template': '{{action}}Between {{subspace0}} and {{subspace1}}, {{focus}}\\'s {{agg}} {{measure}} is anomalously different from that of other values.',\n//     },\n//     {\n//         'id': 2,\n//         'template': '{{action}}Between {{subspace0}} and {{subspace1}}, the {{agg}} {{measure}} of {{focus}} has an outlier score of {{score}} when compared with that of other values.',\n//     },\n// ]\nconst templates = [\n    {\n        'id': 0,\n        'template': '{{action}}The {{agg}} {{measure}} between {{focus}} stands apart as a clear outlier compared to other values in {{subspace0}} and {{subspace1}}.',\n    },\n    {\n        'id': 1,\n        'template': '{{action}}The {{agg}} {{measure}} between {{focus}} is noticeable as an outlier, distinct from other values in {{subspace0}} and {{subspace1}}.',\n    },\n    {\n        'id': 2,\n        'template': '{{action}}The {{agg}} {{measure}} between {{focus}} stands tall as a unique outlier compared to the values in {{subspace0}} and {{subspace1}}.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': '{{action}}The distribution of {{agg}} {{measure}} between {{subspace0}} and {{subspace1}} is presented with a mean value of {{mean}}.',\n    },\n    {\n        'id': 1,\n        'template': '{{action}}A distribution of {{agg}} {{measure}} between {{subspace0}} and {{subspace1}} can be seen, with a mean of {{mean}}.',\n    },\n    {\n        'id': 2,\n        'template': '{{action}}The distribution of {{agg}} {{measure}} in the range of {{subspace0}} to {{subspace1}} has a mean of {{mean}}.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': '{{action}}The {{agg}} {{measures}} in different subspaces display similar patterns to {{baseline}} within {{subspace0}} and {{subspace1}} .',\n    },\n    {\n        'id': 1,\n        'template': '{{action}}The {{baseline}} in {{subspace0}} and {{subspace1}} exhibit a striking similarity to {{agg}} {{measures}} in various subspaces.',\n    },\n    {\n        'id': 2,\n        'template': '{{action}}The {{baseline}} in {{subspace0}} and {{subspace1}} are highly similar to {{agg}} {{measures}} in various subspaces.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': '{{action}}The values of {{focus}} exhibit an outlier within the range of {{subspace0}} to {{subspace1}} in comparison to the rest.',\n    },\n    {\n        'id': 1,\n        'template': '{{action}}The {{focus}} values present a significant deviation from the norm when viewed in relation to the range {{subspace0}} to {{subspace1}}.',\n    },\n    {\n        'id': 2,\n        'template': '{{action}}Anomalies are evident in the {{focus}} values, which stand out when compared with other values within the range {{subspace0}} to {{subspace1}}.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': '{{action}}The correlation between {{agg}} {{measures}} in {{subspace0}} and {{subspace1}} is depicted.',\n    },\n    {\n        'id': 1,\n        'template': '{{action}}The correlation between {{subspace0}} and {{subspace1}} with regards to {{agg}} {{measures}} is shown.',\n    },\n    {\n        'id': 2,\n        'template': '{{action}}The chart below reveals the correlation between {{subspace0}} and {{subspace1}} in terms of {{agg}} {{measures}}.',\n    },\n]\n//The one with the largest mean is the {{measure}}, which has an average of {{mean}}.\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': '{{action}}. When {{subspace}}, there are {{parameter}} categories of {{groupby}}s, including {{no.1}}, {{no.2}}, {{no.3}}.',\n    },\n    {\n        'id': 1,\n        'template': '{{action}}. When {{subspace}}, the data are grouped into {{parameter}} {{groupby}}s, including {{no.1}}, {{no.2}}, {{no.3}}.',\n    },\n    {\n        'id': 2,\n        'template': '{{action}}. When {{subspace}}, the data include {{parameter}} groups of {{groupby}}s, including {{no.1}}, {{no.2}}, {{no.3}}.',\n    },\n]\n\nexport default templates;","const templates = [\r\n    {\r\n        'id': 0,\r\n        'template': '{{action}}The {{agg}} {{measure}} in {{focus}} between {{subspace0}} and {{subspace1}} displays a high level of autocorrelation compared to other lags.',\r\n    },\r\n    {\r\n        'id': 1,\r\n        'template': '{{action}}The {{agg}} {{measure}} in {{focus}} in the time range between {{subspace0}} and {{subspace1}} shows a strong autocorrelation compared to other lags.',\r\n    },\r\n    {\r\n        'id': 2,\r\n        'template': '{{action}}The {{agg}} {{measure}} in {{focus}} stands out with a significant level of autocorrelation between {{subspace0}} and {{subspace1}}, compared to other lags.',\r\n    },\r\n]\r\n\r\nexport default templates;","const templates = [\r\n    {\r\n        'id': 0,\r\n        'template': '{{action}}The {{agg}} {{measure}} in the range between {{subspace0}} and {{subspace1}} is highlighted by its maximum value of {{focus}}.',\r\n    },\r\n    {\r\n        'id': 1,\r\n        'template': '{{action}}The {{agg}} {{measure}} in {{subspace0}} to {{subspace1}} range is marked by the impressive value of {{focus}}, the highest of all.',\r\n    },\r\n    {\r\n        'id': 2,\r\n        'template': '{{action}}The {{agg}} {{measure}} within {{subspace0}} and {{subspace1}} range is noteworthy for its remarkable value of {{focus}}, the highest of all.',\r\n    },\r\n]\r\n\r\nexport default templates;","import InsightType from '../../../constant/InsightType';\n//univariate\nimport trend from './trend';\nimport forecasting from './forecasting';\nimport frequent_pattern from './frequent_pattern';\nimport seasonality from './seasonality';\nimport univariate_outlier from './univariate_outlier';\nimport univariate_distribution from './univariate_distribution';\n//multivariate\nimport similarity from './similarity';\nimport multivariate_outlier from './multivariate_outlier';\nimport multivariate_distribution from './multivariate_distribution';\nimport clustering from './clustering';\nimport autocorrelation from './autocorrelation';\nimport outstanding from './outstanding';\n\nconst templateCount = 3;\nconst pickFactTemplate = function (type, id = -1) {\n    // pick randomly when id == -1\n    let templates = []\n    switch (type) {\n        case InsightType.TREND:\n            templates = trend;\n            break;\n\n        case InsightType.FORECASTING:\n            templates = forecasting;\n            break;\n\n        case InsightType.FREQUENT_PATTERN:\n            templates = frequent_pattern;\n            break;\n\n        case InsightType.SEASONALITY:\n            templates = seasonality;\n            break;\n\n        case InsightType.UNIVARIATE_OUTLIER:\n            templates = univariate_outlier;\n            break;\n\n        case InsightType.UNIVARIATE_DISTRIBUTION:\n            templates = univariate_distribution;\n            break;\n\n        case InsightType.SIMILARITY:\n            templates = similarity;\n            break;\n\n        case InsightType.MULTIVARIATE_OUTLIER:\n            templates = multivariate_outlier;\n            break;\n\n        case InsightType.MULTIVARIATE_DISTRIBUTION:\n            templates = multivariate_distribution;\n            break;\n\n        case InsightType.CLUSTRING:\n            templates = clustering;\n            break;\n        case InsightType.AUTOCORRELATION:\n            templates = autocorrelation;\n            break;\n        case InsightType.OUTSTANDING:\n            templates = outstanding;\n            break;\n        default:\n            break;\n    }\n    if (id === -1) {\n        id = Math.floor(Math.random() * 10) % templateCount\n    }\n    let sentence = '';\n    try {\n        sentence = templates[id].template;\n    }\n    catch (error) {\n        console.error(error);\n        console.log('wrong id:' + id)\n    }\n    return sentence;\n}\n\nexport default pickFactTemplate;","const templates = [\n    {\n        'id': 0,\n        'template': '{{action}}在{{subspace0}}到{{subspace1}}之间，{{agg}}{{measure}}总体是{{parameter}}的.',\n    },\n    {\n        'id': 1,\n        'template': '{{action}}在{{subspace0}}到{{subspace1}}之间，{{agg}}{{measure}}总体呈{{parameter}}趋势.',\n    },\n    {\n        'id': 2,\n        'template': '{{action}}在{{subspace0}}到{{subspace1}}区间内，{{agg}}{{measure}}在总体随时间{{parameter}}.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': '当{{subspace}}时， {{groupby}} 包含了 {{parameter}} 个类别: {{no.1}}、{{no.2}}、{{no.3}}',\n    },\n    {\n        'id': 1,\n        'template': '当{{subspace}}时，数据中的 {{groupby}}s 可以被归为 {{parameter}} 类，包括 {{no.1}}、{{no.2}}、{{no.3}}',\n    },\n    {\n        'id': 2,\n        'template': '当{{subspace}}时，数据中包含 {{parameter}} 种 {{groupby}}s，分别是 {{no.1}}、{{no.2}}、{{no.3}}.',\n    }\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': '{{action}}在{{subspace0}}到{{subspace1}}之间 {{agg}}{{measure}} 的一个片段在整条时间序列上频繁出现了 {{patterns}} 次.',\n    },\n    {\n        'id': 1,\n        'template': '{{action}}在{{subspace0}}到{{subspace1}}之间 {{agg}}{{measure}} 的一个片段在整条时间序列上频繁出现了 {{patterns}} 次.',\n    },\n    {\n        'id': 2,\n        'template': '{{action}}在{{subspace0}}到{{subspace1}}之间 {{agg}}{{measure}} 的一个片段在整条时间序列上频繁出现了 {{patterns}} 次.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': '{{action}}在{{subspace0}}到{{subspace1}}之间，{{agg}}{{measure}}{{parameter}}.整个时序上共有{{seasonality}}个类似的周期性片段.',\n    },\n    {\n        'id': 1,\n        'template': '{{action}}在{{subspace0}}到{{subspace1}}之间，{{agg}}{{measure}}{{parameter}}.整个时序上共有{{seasonality}}个类似的周期性片段.',\n    },\n    {\n        'id': 2,\n        'template': '{{action}}在{{subspace0}}到{{subspace1}}之间，{{agg}}{{measure}}{{parameter}}.整个时序上共有{{seasonality}}个类似的周期性片段.',\n\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': '{{action}}在{{subspace0}}到{{subspace1}}之间，与其他值相比，{{agg}}{{measure}}存在{{parameter}}段异常.',\n    },\n    {\n        'id': 1,\n        'template': '{{action}}在{{subspace0}}到{{subspace1}}之间，{{agg}}{{measure}}上的{{parameter}}段异常和其他值相比有显著差异.',\n    },\n    {\n        'id': 2,\n        'template': '{{action}}在{{subspace0}}到{{subspace1}}之间，{{agg}}{{measure}}存在{{parameter}}段异常.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': '{{action}}在{{subspace0}}到{{subspace1}} 之间，{{agg}}{{measure}}的数据分布如图所示. 其数据范围位于{{min}}到{{max}}区间内.',\n    },\n    {\n        'id': 1,\n        'template': '{{action}}在{{subspace0}}到{{subspace1}} 之间，{{agg}}{{measure}}的数据分布的结果如图所示. 其平均值为{{mean}}.',\n    },\n    {\n        'id': 2,\n        'template': '{{action}}在{{subspace0}}到{{subspace1}} 之间，{{agg}}{{measure}}随时间的分布如图所示. 其中最大值为{{max}}，最小值为{{min}}.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': '{{action}}{{agg}}{{measures}}中有多个分段与{{baseline}}在{{subspace0}}到{{subspace1}}之间的数据相似.',\n    },\n    {\n        'id': 1,\n        'template': '{{action}}{{agg}}{{measures}}中有多个分段与{{baseline}}在{{subspace0}}到{{subspace1}}之间的数据相似.',\n    },\n    {\n        'id': 2,\n        'template': '{{action}}{{agg}}{{measures}}中有多个分段与{{baseline}}在{{subspace0}}到{{subspace1}}之间的数据相似.',\n    }\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': '{{action}}在{{subspace0}}到{{subspace1}}之间，与其他值相比，在{{focus}}上存在异常.',\n    },\n    {\n        'id': 1,\n        'template': '{{action}}在{{subspace0}}到{{subspace1}}之间，{{focus}}的值和其他值相比有显著差异.',\n    },\n    {\n        'id': 2,\n        'template': '{{action}}在{{subspace0}}到{{subspace1}}之间，相比其他值，{{focus}}的值存在异常，且其异常分数达到{{score}}.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': '{{action}}在{{subspace0}}到{{subspace1}}之间，{{agg}}{{measures}}这几个变量的多维分布结果分布如图所示.',\n    },\n    {\n        'id': 1,\n        'template': '{{action}}在{{subspace0}}到{{subspace1}}之间，{{agg}}{{measures}}多变量分布结果如图所示.',\n    },\n    {\n        'id': 2,\n        'template': '{{action}}在{{subspace0}}到{{subspace1}}之间， 有关{{measures}}{{agg}}分布结果如图所示.',\n    },\n]\n\nexport default templates;","const templates = [\n    {\n        'id': 0,\n        'template': '当{{subspace}}时，总体看， {{measure1}} 和 {{measure2}} 之间存在 {{正/负}} 相关关系.',\n    },\n    {\n        'id': 1,\n        'template': '当{{subspace}}时，总体看， {{measure1}} 和 {{measure2}} 呈 {{正/负}} 相关.',\n    },\n    {\n        'id': 2,\n        'template': '当{{subspace}}时，总体看， {{measure1}} 和 {{measure2}} 呈 {{正/负}} 相关（皮尔森相关系数={{parameter}}）.',\n    }\n]\n\nexport default templates;","const templates = [\r\n    {\r\n        'id': 0,\r\n        'template': '{{action}}在{{subspace0}}到{{subspace1}}之间，{{agg}}{{measure}}在间隔{{focus}}个点时有着最高的相关性.',\r\n    },\r\n    {\r\n        'id': 1,\r\n        'template': '{{action}}在{{subspace0}}到{{subspace1}}之间， {{agg}}{{measure}}上两个间隔{{focus}}的数据点相关性最强.',\r\n    },\r\n    {\r\n        'id': 2,\r\n        'template': '{{action}}在{{subspace0}}到{{subspace1}}之间， {{agg}}{{measure}}在间隔{{focus}}个点时的自相关性最高.',\r\n    },\r\n]\r\n\r\nexport default templates;","const templates = [\r\n    {\r\n        'id': 0,\r\n        'template': '{{action}}在{{subspace0}}到{{subspace1}}之间， {{agg}}{{measure}}的突出值为{{focus}}, 为最大值.',\r\n    },\r\n    {\r\n        'id': 1,\r\n        'template': '{{action}}在{{subspace0}}到{{subspace1}}之间， {{agg}}{{measure}}的最大值是{{focus}}.',\r\n    },\r\n    {\r\n        'id': 2,\r\n        'template': '{{action}}在{{subspace0}}到{{subspace1}}之间， {{agg}}{{measure}}有最大值,其值为{{focus}}.',\r\n    },\r\n]\r\n\r\nexport default templates;","import InsightType from '../../../constant/InsightType';\n//univariate\nimport trend from './trend';\nimport forecasting from './forecasting';\nimport frequent_pattern from './frequent_pattern';\nimport seasonality from './seasonality';\nimport univariate_outlier from './univariate_outlier';\nimport univariate_distribution from './univariate_distribution';\n//multivariate\nimport similarity from './similarity';\nimport multivariate_outlier from './multivariate_outlier';\nimport multivariate_distribution from './multivariate_distribution';\nimport clustering from './clustering';\nimport autocorrelation from './autocorrelation';\nimport outstanding from './outstanding';\n\nconst templateCount = 3;\n\nconst pickFactTemplate = function(type, id=-1) {\n    // pick randomly when id == -1\n    let templates = []\n    switch (type) {\n        case InsightType.TREND:\n            templates = trend;\n            break;\n\n        case InsightType.FORECASTING:\n            templates = forecasting;\n            break;\n\n        case InsightType.FREQUENT_PATTERN:\n            templates = frequent_pattern;\n            break;\n\n        case InsightType.SEASONALITY:\n            templates = seasonality;\n            break;\n\n        case InsightType.UNIVARIATE_OUTLIER:\n            templates = univariate_outlier;\n            break;\n\n        case InsightType.UNIVARIATE_DISTRIBUTION:\n            templates = univariate_distribution;\n            break;\n\n        case InsightType.SIMILARITY:\n            templates = similarity;\n            break;\n\n        case InsightType.MULTIVARIATE_OUTLIER:\n            templates = multivariate_outlier;\n            break;\n\n        case InsightType.MULTIVARIATE_DISTRIBUTION:\n            templates = multivariate_distribution;\n            break;\n\n        case InsightType.CLUSTRING:\n            templates = clustering;\n            break;\n        \n        case InsightType.AUTOCORRELATION:\n            templates=autocorrelation;\n            break;\n        case InsightType.OUTSTANDING:\n            templates=outstanding;\n            break;\n        default:\n            break;\n    }\n    if (id === -1) {\n        id = Math.floor(Math.random() * 10)%templateCount\n    }\n    let sentence = '';\n    try {\n        sentence = templates[id].template;\n    }\n    catch(error) {\n        console.error(error);\n        console.log('wrong id:'+id)\n    }\n    return sentence;\n}\n\nexport default pickFactTemplate;","export default {\n    SUM: 'sum',\n    MAX: 'max',\n    MIN: 'min',\n    AVG: 'avg',\n    MEDIAN:'median',\n    COUNT: 'count',\n    // NONE: 'none'\n}","export default {\n    \"-1\": '',\n    \"0\": 'Another insight also appears in this time subsuquence. ',\n    \"1\": 'Looking back at the previous stretch of time. ',\n    \"2\": 'As time marches on. ',\n    \"3\": 'Examing in the way of period-over-period. ',\n    \"4\": 'At the same time, comparing other variables. ',\n    \"5\": 'Taking in multiple variables as a whole. ',\n    \"6\": 'Among these variables, one in particular deserves attention. ',\n    \"7\": ''\n}","export default {\n    \"-1\": '',\n    \"0\": '这段时序上还存在着另一个洞察. ',\n    \"1\": '回顾之前的一段时间. ',\n    \"2\": '随着时间的推移. ',\n    \"3\": '观察同比的时间段. ',\n    \"4\": '与此同时，对比其他变量. ',\n    \"5\": '综合观察多个变量. ',\n    \"6\": '在这些变量中，其中一个变量值得特别关注. ',\n    \"7\": ''\n}","import pickFactTemplate from './fact-templates-en';\nimport pickFactTemplateZh from './fact-templates-zh'\n// import pickRelationTemplate from './relation-templates';\nimport FactType from '../../constant/FactType'\n// import { isValid } from '@/view/FactView/helper'\nimport AggregationType from '../../constant/AggregationType'\nimport InsightType from '../../constant/InsightType';\nimport ActionType from '../../constant/ActionType';\nimport ActionTypeZh from '../../constant/ActionTypeZh';\nimport ActionCaption from '../../constant/ActionCaption';\nimport ActionCaptionZh from '../../constant/ActionCaptionZh';\nimport _ from 'lodash'\n\n//-----------------------------------aggregate----------------------------\n// const plur = require('plur');\nconst convertAggregation = function (aggType, langEn = true) {\n    switch (aggType) {\n        case AggregationType.SUM:\n            return langEn ? 'total' : '总'\n\n        case AggregationType.MAX:\n            return langEn ? 'maximum' : '最大'\n\n        case AggregationType.MIN:\n            return langEn ? 'minimum' : '最小'\n\n        case AggregationType.AVG:\n            return langEn ? 'average' : '平均'\n\n        case AggregationType.MEDIAN:\n            return langEn ? 'median' : '中'\n\n        case AggregationType.COUNT:\n            return langEn ? 'count' : '数量'\n\n        case AggregationType.NONE:\n            return ''\n\n        default:\n            return ''\n    }\n}\n\nconst converAction = function (action, langEn = true) {\n    switch (action) {\n        case -1:\n            return langEn ? ActionCaption[\"-1\"] : ActionCaptionZh[\"-1\"]\n\n        case 0:\n            return langEn ? ActionCaption[\"0\"] : ActionCaptionZh[\"0\"]\n\n        case 1:\n            return langEn ? ActionCaption[\"1\"] : ActionCaptionZh[\"1\"]\n\n        case 2:\n            return langEn ? ActionCaption[\"2\"] : ActionCaptionZh[\"2\"]\n\n        case 3:\n            return langEn ? ActionCaption[\"3\"] : ActionCaptionZh[\"3\"]\n\n        case 4:\n            return langEn ? ActionCaption[\"4\"] : ActionCaptionZh[\"4\"]\n\n        case 5:\n            return langEn ? ActionCaption[\"5\"] : ActionCaptionZh[\"5\"]\n\n        case 6:\n            return langEn ? ActionCaption[\"6\"] : ActionCaptionZh[\"6\"]\n\n        case 7:\n            return langEn ? ActionCaption[\"7\"] : ActionCaptionZh[\"7\"]\n\n        default:\n            return ''\n    }\n}\n//---------------------------------measure-------------------------------------\nconst convertMeasure = function (measure) {\n    if (measure.aggregate === \"count\") return \"\"\n    else return measure.field.toLowerCase();\n}\n\nconst convertMultiMeasure = function (measures, hasBalineline = true, langEn = true) {\n    let measureStr = ''\n    let baseline = ''\n    let measureList = []\n    if (hasBalineline) {\n        for (let i = 0; i < measures.length; i++) {\n            if (measures[i][\"value\"][0].text === \"Base Line\") {\n                baseline = measures[i][\"field\"]\n            } else {\n                measureList.push(measures[i][\"field\"])\n            }\n        }\n    } else {\n        for (let i = 0; i < measures.length; i++) {\n            if (!measureList.includes(measures[i].field)) {\n                measureList.push(measures[i].field)\n            }\n        }\n    }\n\n    for (let i = 0; i < measureList.length; i++) {\n        if (i === measureList.length - 1 && measureList.length > 1) {\n            if (langEn) measureStr += \"and \" + measureList[i]\n            else measureStr += \"和 \" + measureList[i]\n        } else if (i === measureList.length - 2) {\n            measureStr += measureList[i] + \" \"\n        } else {\n            measureStr += measureList[i] + \", \"\n        }\n\n    }\n    return { measureStr: measureStr, baseline: baseline }\n}\nconst converFocusRange = function (focus, subspace, data, langEn = true) {\n    if (langEn) return `${data[focus[\"scope\"][0] + subspace[0]]} and ${data[focus[\"scope\"][1] + subspace[0]]}`\n    else return `${data[focus[\"scope\"][0] + subspace[0]]} 到 ${data[focus[\"scope\"][1] + subspace[0]]}`\n}\n//----------------------------------subspace---------------------------------\nconst genFactSubspace = function (subspace, template, langEn = true, data) {\n    if (subspace.length) {\n        template = template.replace(\"{{subspace0}}\", data[subspace[0]]);\n        template = template.replace(\"{{subspace1}}\", data[subspace[1]]);\n    } else {\n        // if(data.length>0){\n        template = template.replace(\"{{subspace0}}\", data[0]);\n        template = template.replace(\"{{subspace1}}\", data[data.length - 1]);\n        // }else{\n        //     template = template.replace(\"在{{subspace0}}到{{subspace1}}之间，\", '');\n        //     template = template.replace(\"， 在{{subspace0}}到{{subspace1}}之间\", '');\n        //     template = template.replace(\"Between {{subspace0}} and {{subspace1}}， \", '');\n        //     template = template.replace(\" when the time is between {{subspace0}} and {{subspace1}}\", '');\n        //     template = template.replace(\" 在{{subspace0}}到{{subspace1}}之间， \", '');\n        //     template = template.replace(\"在{{subspace0}}到{{subspace1}}之间\", '');\n        //     template = template.replace(/^\\S/, s => s.toUpperCase())\n        // }\n    }\n    return template\n}\n\n\nexport const genFactSentence = function (_fact, block, type, lang, id = -1, data = [], action = -1) {\n    let langIsEn = lang === \"en-US\"\n    let fact = _.cloneDeep(_fact)\n    let template = langIsEn ? pickFactTemplate(type, id) : pickFactTemplateZh(type, id);\n    let aggregate = AggregationType.NONE;\n    if (fact.measure.length > 0) {\n        aggregate = fact.measure[0].aggregate;\n    }\n    template = template.replace(\"{{action}}\", converAction(action, langIsEn))\n    switch (type) {\n        case InsightType.TREND:\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate, langIsEn));\n            template = genFactSubspace(fact.subspace, template, langIsEn, data)\n            let lineReg = fact.focus[0][\"regression\"]\n            if (langIsEn) {\n                if (lineReg[0] - lineReg[lineReg.length - 1] > 0) {\n                    template = template.replace(\"{{parameter}}\", 'decreased');\n                    template = template.replace(\"a/an\", 'a');\n                } else {\n                    template = template.replace(\"{{parameter}}\", 'increasing');\n                    template = template.replace(\"a/an\", 'an');\n                }\n            }\n            else {\n                if (lineReg[0] - lineReg[lineReg.length - 1] > 0) {\n                    template = template.replace(\"{{parameter}}\", '下降');\n                } else {\n                    template = template.replace(\"{{parameter}}\", '增长');\n                }\n            }\n            break;\n\n        case InsightType.FORECASTING:\n            break;\n\n        case InsightType.FREQUENT_PATTERN:\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate, langIsEn));\n            // template = genFactSubspace(fact.subspace, template, langIsEn, data)\n            template = genFactSubspace(fact.focus[0][\"scope\"], template, langIsEn, data)\n\n            if (fact.focus.length > 0) {\n                template = template.replace(\"{{patterns}}\", fact.focus[0][\"patterns\"].length.toString());\n            }\n            break;\n\n        case InsightType.SEASONALITY:\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate, langIsEn));\n            // template = genFactSubspace(fact.subspace, template, langIsEn, data)\n            template = genFactSubspace(fact.focus[0][\"scope\"], template, langIsEn, data)\n\n            if (fact.focus.length > 0) {\n                let insightFocus = fact.focus[0]\n                template = template.replace(\"{{parameter}}\", insightFocus.ifSeasonal ? (langIsEn ? \"seasonal\" : \"具有周期性\") : (langIsEn ? \"unseasonal\" : \"存在不符合周期性的片段。如图中灰色的区间。\"));\n                template = template.replace(\"{{seasonality}}\", insightFocus.interval.toString());\n                // template = template.replace(\"{{unseasonality}}\", insightFocus.seasonal.length.toString());\n            }\n            break;\n\n        case InsightType.UNIVARIATE_OUTLIER:\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate, langIsEn));\n            template = genFactSubspace(fact.subspace, template, langIsEn, data)\n            let start1 = fact.focus[0][\"scope\"][0], end1 = fact.focus[0][\"scope\"][1]\n            if (start1 === end1) {\n                template = template.replace(\"{{focus}}\", `${data[start1]}`);\n            } else {\n                template = template.replace(\"{{focus}}\", `${data[start1]} and ${data[end1]}`);\n            }\n            // if (fact.focus.length > 0) {\n            //     template = template.replace(\"{{parameter}}\", fact.focus.length.toString())\n            //     template = template.replace(\"{{focus}}\", converFocusRange(fact.focus[0], fact.subspace, data))\n            //     template = template.replace(\"{{score}}\", fact.focus[0][\"value\"].toFixed(2).toString())\n            // }\n            // }\n\n            break;\n\n        case InsightType.UNIVARIATE_DISTRIBUTION:\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate, langIsEn));\n            template = genFactSubspace(fact.subspace, template, langIsEn, data)\n            for (let i = 0; i < fact.focus.length; i++) {\n                let focuName = fact.focus[i][\"name\"]\n                let value = fact.focus[i][\"value\"]\n                if (focuName == \"min\") {\n                    template = template.replace(\"{{min}}\", value.toFixed(2).toString());\n                } else if (focuName == \"max\") {\n                    template = template.replace(\"{{max}}\", value.toFixed(2).toString());\n                } else if (focuName == \"mean\") {\n                    template = template.replace(\"{{mean}}\", value.toFixed(2).toString());\n                }\n            }\n            break;\n\n        case InsightType.SIMILARITY:\n            let result = convertMultiMeasure(fact.focus, true, langIsEn)\n            template = template.replace(\"{{measures}}\", result.measureStr);\n            template = template.replace(\"{{baseline}}\", result.baseline);\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate, langIsEn));\n            // template = genFactSubspace(fact.subspace, template, langIsEn, data)\n            template = genFactSubspace(fact.focus[0][\"scope\"], template, langIsEn, data)\n\n            break;\n\n        case InsightType.MULTIVARIATE_OUTLIER:\n            // template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate, langIsEn));\n            template = genFactSubspace(fact.subspace, template, langIsEn, data);\n            template = template.replace(\"{{score}}\", fact.focus[0][\"score\"].toFixed(2).toString());\n            let start = fact.focus[0][\"start\"] + fact.subspace[0], end = fact.focus[0][\"end\"] + fact.subspace[0]\n            if (start === end) {\n                template = template.replace(\"{{focus}}\", `${data[start]}`);\n            } else {\n                template = template.replace(\"{{focus}}\", `${data[start]} and ${data[end]}`);\n            }\n            break;\n\n        case InsightType.MULTIVARIATE_DISTRIBUTION:\n            let resultDistribution = convertMultiMeasure(fact.focus, false, langIsEn)\n            template = template.replace(\"{{measures}}\", resultDistribution.measureStr);\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate, langIsEn));\n            template = genFactSubspace(fact.subspace, template, langIsEn, data)\n            let tempMean = -10e9\n            let maxMeanValue = 0\n            let maxMeanMeasure = ''\n            for (let i = 0; i < fact.focus[0].length; i++) {\n                if (fact.focus[0][i][\"name\"] === \"mean\") {\n                    if (fact.focus[0][i][\"value\"] > tempMean) {\n                        maxMeanValue = fact.focus[0][i][\"value\"]\n                        tempMean = fact.focus[0][i][\"value\"]\n                        maxMeanMeasure = fact.focus[0][i][\"field\"]\n                    }\n                }\n            }\n            template = template.replace(\"{{measure}}\", maxMeanMeasure);\n            template = template.replace(\"{{mean}}\", maxMeanValue.toFixed(2).toString());\n            break;\n\n        case InsightType.CLUSTRING:\n            break;\n\n        case InsightType.OUTSTANDING:\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate, langIsEn));\n            template = genFactSubspace(fact.subspace, template, langIsEn, data)\n            template = template.replace(\"{{focus}}\", fact.focus[0][\"value\"].toFixed(2).toString());\n            break;\n        case InsightType.AUTOCORRELATION:\n            template = template.replace(\"{{measure}}\", convertMeasure(fact.measure[0]));\n            template = template.replace(\"{{agg}}\", convertAggregation(aggregate, langIsEn));\n            template = genFactSubspace(fact.subspace, template, langIsEn, data)\n            template = template.replace(\"{{focus}}\", fact.focus[0][\"correlation\"].indexOf(Math.max(...fact.focus[0][\"correlation\"])) + 1)\n            break\n        default:\n            break;\n    }\n    template = template.slice(0, 1).toUpperCase() + template.slice(1)\n    return template;\n}\n\n\nexport const genStoryText = function (facts, relations) {\n    let template;\n    let storyText = '';\n    let pairLength = parseInt(facts.length / 2)\n    //console.log(\"relations\", facts, relations)\n    for (let i = 0; i < pairLength; i++) {\n        if (facts[i]) {\n            template = pickRelationTemplate(relations[i * 2 + 1])\n            // template = template.replace(\"{{Sentence A}}\", facts[i * 2].script());\n            // template = template.replace(\"{{Sentence B}}\", facts[i * 2 + 1].script());\n            template = template.replace(\"{{Sentence A}}\", facts[i * 2].generatedScript);\n            template = template.replace(\"{{Sentence B}}\", facts[i * 2 + 1].generatedScript);\n            storyText += template + ' '\n        }\n    }\n    if (facts.length % 2) {\n        //storyText += facts[facts.length - 1].script()\n        storyText += facts[facts.length - 1].generatedScript\n    }\n    //console.log(\"storyText\", storyText)\n    return storyText\n}\n\nexport const genSubtitle = function (fact, lang) {\n    if (lang === \"en-US\") {\n        let title;\n        if (!isValid(fact))\n            return ''\n\n        title = 'The ' + fact.type\n        switch (fact.type) {\n            case FactType.ASSOCIATION:\n                title += ' of ' + fact.measure[0].field + ' and ' + fact.measure[1].field\n                break;\n            case FactType.CATEGORIZATION:\n                // title += ' of ' + fact.groupby[0]\n                title = fact.groupby[0]\n                break;\n\n            case FactType.DIFFERENCE:\n                title += ' between ' + fact.focus[0].value + ' and ' + fact.focus[1].value\n                break;\n            case FactType.DISTRIBUTION:\n                title += ' of ' + fact.measure[0].field\n                break;\n            case FactType.EXTREME:\n                title += ' of ' + fact.measure[0].field\n                break;\n            case FactType.OUTLIER:\n                title += ' of ' + fact.measure[0].field\n                break;\n            case FactType.PROPORTION:\n                title += ' of ' + fact.focus[0].value\n                break;\n            case FactType.RANK:\n                title += ' of ' + fact.measure[0].field\n                break;\n            case FactType.TREND:\n                title += ' of ' + fact.measure[0].field\n                break;\n            case FactType.VALUE:\n                title = 'The ' + convertAggregation(fact.measure[0].aggregate) + ' ' + fact.measure[0].field\n                break;\n            default:\n                break;\n        }\n        if (fact.subspace.length) {\n            let subspace = '';\n            fact.subspace.map((key, i) => { return subspace += ` in ${key.value}` })\n            title += subspace;\n        }\n        return title;\n    } else {\n        let title = '';\n        if (!isValid(fact))\n            return ''\n        if (fact.subspace.length) {\n            let subspace = '';\n            fact.subspace.map((key, i) => { return subspace += ` ${key.value}` })\n            title += '在 ' + subspace + '中，';\n        }\n        // title = 'The ' + fact.type\n        switch (fact.type) {\n            case FactType.ASSOCIATION:\n                title += fact.measure[0].field + ' 和 ' + fact.measure[1].field + '的相关性'\n                break;\n            case FactType.CATEGORIZATION:\n                // title += ' of ' + fact.groupby[0]\n                title += fact.groupby[0] + '的分类情况'\n                break;\n\n            case FactType.DIFFERENCE:\n                title += fact.focus[0].value + ' 和 ' + fact.focus[1].value + '的差异'\n                break;\n            case FactType.DISTRIBUTION:\n                title += fact.measure[0].field + '的分布'\n                break;\n            case FactType.EXTREME:\n                title += fact.measure[0].field + '的极值'\n                break;\n            case FactType.OUTLIER:\n                title += fact.measure[0].field + '的异常值'\n                break;\n            case FactType.PROPORTION:\n                title += fact.focus[0].value + '的占比'\n                break;\n            case FactType.RANK:\n                title += fact.measure[0].field + '的排名'\n                break;\n            case FactType.TREND:\n                title += fact.measure[0].field + '的趋势'\n                break;\n            case FactType.VALUE:\n                switch (convertAggregation(fact.measure[0].aggregate)) {\n                    case AggregationType.SUM:\n                        title += fact.measure[0].field + '的总值'\n                        break;\n\n                    case AggregationType.MAX:\n                        title += fact.measure[0].field + '的最大值'\n                        break;\n\n                    case AggregationType.MIN:\n                        title += fact.measure[0].field + '的最小值'\n                        break;\n\n                    case AggregationType.AVG:\n                        title += fact.measure[0].field + '的平均值'\n                        break;\n\n                    case AggregationType.COUNT:\n                        title += fact.measure[0].field + '的数量'\n                        break;\n\n                    case AggregationType.NONE:\n                        title += fact.measure[0].field + '的值'\n                        break;\n\n                    default:\n                        title += fact.measure[0].field + '的值'\n                        break;\n\n                }\n                break;\n            default:\n                break;\n        }\n\n        return title;\n    }\n\n\n}\n\n\nexport const genTitle = function (fileName) {\n    let title;\n    switch (fileName) {\n        case 'CarSales.csv':\n            title = 'Car Sales'\n            break;\n\n        case 'nCoV2020.csv':\n            title = 'COVID-19'\n            break;\n\n        case 'deadstartup.csv':\n            title = 'Startup Failures'\n            break;\n\n        default:\n            if (fileName.indexOf('.') > 0) {\n                let number = fileName.indexOf('.');\n                // let csv = fileName.substr(number);\n                title = fileName.substring(0, number);\n            } else {\n                title = fileName\n            }\n            break;\n    }\n    return title\n}\n","export default {\r\n    \"-1\": 'unknown',\r\n    \"0\": 'change insight type',\r\n    \"1\": 'previous subspace',\r\n    \"2\": 'succeeding subspace',\r\n    \"3\": 'period',\r\n    \"4\": 'different varaible',\r\n    \"5\": 'drill up',\r\n    \"6\": 'drill down',\r\n    \"7\": 'aggregate',\r\n    \"8\": 'deaggregate'\r\n}","export default {\r\n    \"-1\": '',\r\n    \"0\": '改变洞察类型',\r\n    \"1\": '时间分段前溯',\r\n    \"2\": '时间分段后移',\r\n    \"3\": '环比',\r\n    \"4\": '切换到不同变量',\r\n    \"5\": '单维度向多维度转变',\r\n    \"6\": '多维度向单维度转变',\r\n    \"7\": '分析流终止'\r\n}"],"sourceRoot":""}