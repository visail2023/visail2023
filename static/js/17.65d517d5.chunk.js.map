{"version":3,"sources":["constant/InsightTypeTrans.js","constant/RecommendedInsightColor.js","components/SeiresView/SequenceView/InsightCardView/helper.js","constant/InsightTypeZh.js","pages/ExportPage/StorylineWebView/TimeLineSlot.js","pages/ExportPage/FactSheetView/FactCard.js","pages/ExportPage/FactSheetView/Script.js","pages/ExportPage/FactSheetView/FactSheetView.js","constant/ActionColor.js","pages/ExportPage/StorylineWebView/StorylineWebView.js","pages/ExportPage/ExportPage.js"],"names":["trend","forecasting","frequent_pattern","seasonality","univariate_outlier","univariate_distribution","similarity","multivariate_outlier","multivariate_distribution","clustering","outstanding","autocorrelation","insightColors","hightlightItem","script","parameter","indexOf","srtStartIndex","newScript","substring","length","TimeLineSlot","props","parseCaptionStyleToEmpty","styleHlight","innerHTML","React","createRef","desFitRef","textFitRef","headerRef","state","this","insightSpec","captionId","timeValue","factType","currentLocale","sequence","index","visNode","vis","children","chartType","x","originChartSize","width","y","height","style","transform","caption","undefined","genFactSentence","fact","oriBlock","action","parseCaptionStyle","styles","_child","offsetHeight","contentEditable","spellCheck","data","newScrpit","timeStr","blockValue","start","end","subspace","replace","font_min_size","exportSpec","chart","id","toString","showTooltip","className","display","flexDirection","outline","InsightTypeTrans","toLowerCase","outlineOffset","ref","node","overflow","spec","lineHeight","key","el","mode","max","computeDesScripts","onReady","parseScript","paddingTop","min","computeDes","titleFitReady","InsightTypeZh","Component","FactCard","calcuChartSize","factStyle","Script","textRef","_parent","clientHeight","parseFloat","suppressContentEditableWarning","slotHeight","generatedScript","textFitReady","FactSheetView","calcuFactStyle","result","addOne","arr","res","final","_","range","forEach","i","c","slice","temp_arr","res_temp","push","_result","filter","r","Math","round","slen","lineThree","floor","lineTwo","lineOne","location","insight","type","computePdfSize","alignItems","maxWidth","marginLeft","map","item","layout","marginTop","boxShadow","StorylineWebView","onStart","onStop","onDrag","moving","direction","sign","_whichOpacity","values","tl","olRef","tlStyle","getComputedStyle","tlTransform","getPropertyValue","parseInt","split","setState","timelineTransform","setTimeout","_checkVisibility","isElementInViewport","firstOrLast","rect","getBoundingClientRect","rect_p","parentNode","right","left","last_item","lastItem","rightOpacity","first_item","firstItem","leftOpacity","titleRef","onetimeRef","timelineWidth","activeDrags","minFontSizeTitle","containerHeight","visContainerSize","factTypeIncluced","actionIncluded","includes","hasOwnProperty","console","log","actions","dragHandlers","position","paddingBottom","opacity","onClick","margin","viewBox","focusable","data-icon","fill","aria-hidden","d","axis","cancel","enableUserSelectHack","backgroundImage","ActionColor","passOnClick","handleClickDiv","backgroundColor","ActionType","ActionTypeZh","ExportPage","storyview","forPublish","justifyContent"],"mappings":"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","file":"static/js/17.65d517d5.chunk.js","sourcesContent":["export default {\r\n    trend: 'Trend',\r\n    forecasting: 'Forecasting',\r\n    frequent_pattern: 'Similarity',\r\n    seasonality: 'Seasonality',\r\n    univariate_outlier: 'Outlier',\r\n    univariate_distribution: 'Distribution',\r\n    similarity: 'Similarity',\r\n    multivariate_outlier: 'Outlier',\r\n    multivariate_distribution: 'Correlation',\r\n    clustering: 'Clustering',\r\n    outstanding: 'Extreme',\r\n    autocorrelation: 'Autocorrelation'\r\n}","export const insightColors = {\r\n    \"trend\": \"#8dd3c7\",\r\n    \"forecasting\": \"#f0e68c\",\r\n    // \"frequent_pattern\": \"#bebada\",\r\n    // \"seasonality\": \"#fb8072\",\r\n    \"seasonality\": \"#80b1d3\",\r\n    // \"univariate_outlier\": \"#80b1d3\",\r\n    \"distribution\": \"#F5DEB3\",\r\n    \"similarity\": \"#b3de69\",\r\n    \"outlier\": \"#fccde5\",\r\n    \"correlation\": \"#d9d9d9\",\r\n    \"clustering\": \" #bc80bd\",\r\n    \"autocorrelation\": \"#bebada\",\r\n    \"extreme\": \"#FF7F50\",\r\n    \"null\": \"white\"\r\n}","\r\nexport const hightlightItem = function (script, parameter) {\r\n    if (script.indexOf(parameter) === -1) return script\r\n    let srtStartIndex = script.indexOf(parameter);\r\n    let newScript = script.substring(0, srtStartIndex + parameter.length) + \"</b></span>\" + script.substring(srtStartIndex + parameter.length);\r\n    newScript = newScript.substring(0, srtStartIndex) + '<span class=\"timeline-hightlight\"><b>' + newScript.substring(srtStartIndex);\r\n    return newScript\r\n}\r\n//只需要时间列的信息\r\n// export const getOriData = function () {\r\n//     let timeValue = []\r\n    \r\n    \r\n//     return timeValue\r\n// }\r\n","export default {\r\n    trend: '趋势',\r\n    forecasting: '预测',\r\n    frequent_pattern: '相似性',\r\n    seasonality: '周期性',\r\n    univariate_outlier: '异常',\r\n    univariate_distribution: '分布',\r\n    similarity: '相似性',\r\n    multivariate_outlier: '异常',\r\n    multivariate_distribution: '关联性',\r\n    clustering: '聚类',\r\n    outstanding: '极值',\r\n    autocorrelation: '自相关性'\r\n}","import React, { Component } from 'react'\r\nimport { Textfit } from '@kyo_ago/react-textfit';\r\nimport { insightColors } from '../../../constant/RecommendedInsightColor';\r\nimport Chart from '../../../insight_charts/Chart';\r\nimport _ from 'lodash';\r\nimport { originChartSize } from '../../../constant/ChartSize';\r\nimport { genFactSentence } from '../../../insight_charts/caption';\r\nimport { hightlightItem } from '../../../components/SeiresView/SequenceView/InsightCardView/helper';\r\nimport InsightTypeTrans from '../../../constant/InsightTypeTrans';\r\nimport InsightTypeZh from '../../../constant/InsightTypeZh';\r\nexport default class TimeLineSlot extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.styleHlight = React.createRef();\r\n        this.desFitRef = React.createRef();\r\n        this.textFitRef = React.createRef();\r\n        this.headerRef = React.createRef();\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const { insightSpec, captionId, timeValue, factType, currentLocale, sequence, index } = this.props\r\n\r\n        if (this.visNode) {\r\n            let vis = this.visNode.children[0];\r\n            if (vis) {\r\n                let chartType = this.props.factType\r\n                let x = 150 / originChartSize[chartType].width\r\n                let y = 120 / originChartSize[chartType].height\r\n                vis.style.transform = `scaleX(${x})scaleY(${y})`;\r\n            }\r\n        }\r\n        let caption = ''\r\n        if (insightSpec !== \"empty\" && insightSpec !== undefined) {\r\n            caption = genFactSentence(insightSpec.fact, sequence[index].oriBlock, factType, currentLocale, captionId, timeValue, sequence[index].action)\r\n        } else return\r\n        this.parseCaptionStyle(insightSpec.fact, caption, timeValue)\r\n    }\r\n    componentWillUnmount() {\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.visNode) {\r\n            let vis = this.visNode.children[0];\r\n            if (vis) {\r\n                let chartType = this.props.factType\r\n                let x = 150 / originChartSize[chartType].width\r\n                let y = 120 / originChartSize[chartType].height\r\n                vis.style.transform = `scaleX(${x})scaleY(${y})`;\r\n            }\r\n        }\r\n    }\r\n    computeDes() {\r\n        let styles = {};\r\n        styles['width'] = '100%';\r\n        styles['height'] = 'fit-content';\r\n        styles['textOverflow'] = 'ellipsis'\r\n        styles['display'] = '-webkit-box'\r\n        styles['WebkitBoxOrient'] = 'vertical'\r\n        styles['WebkitLineClamp'] = '2'\r\n        styles['overflow'] = 'hidden'\r\n        styles['lineHeight'] = '18px'\r\n        return styles\r\n    }\r\n    computeDesScripts() {\r\n        let styles = {};\r\n        styles['width'] = '100%';\r\n        styles['height'] = '75px';\r\n        styles['textOverflow'] = 'ellipsis'\r\n        styles['display'] = '-webkit-box'\r\n        styles['WebkitBoxOrient'] = 'vertical'\r\n        styles['WebkitLineClamp'] = '5'\r\n        styles['overflowY'] = 'scroll'\r\n        styles['wordBreak'] = 'break-all';\r\n        return styles\r\n    }\r\n\r\n    parseScript() {\r\n\r\n        if (!this.desFitRef) {\r\n            return\r\n        }\r\n        if (this.desFitRef._child.offsetHeight >= 75) {\r\n            this.desFitRef._child.style['font-size'] = '10px';\r\n            this.desFitRef._child.style['transform-origin'] = \"top left\";\r\n            this.desFitRef._child.style['line-height'] = 1.1\r\n        } else {\r\n            // console.log(this.desFitRef)\r\n            this.desFitRef._child.style.transform = 'scale(1)';\r\n            this.desFitRef._child.style['font-size'] = '10px';\r\n            this.desFitRef._child.style['transform-origin'] = \"top left\";\r\n            this.desFitRef._child.style['line-height'] = 1.1\r\n        }\r\n        // this.desFitRef._child.innerHTML = hightlight(events[i].fact)\r\n        this.desFitRef._child.contentEditable = false\r\n        this.desFitRef._child.spellCheck = false\r\n    }\r\n\r\n\r\n    titleFitReady() {\r\n        // // console.log('title',i, this.textFitRef, this.state.subtitle, events[i].fact.generatedSubtitle)\r\n        // if (!this.textFitRef) {\r\n        //     return\r\n        // }\r\n        // let padTop = (50 - this.textFitRef._child.offsetHeight) / 2 >= 0 ?(40 - this.textFitRef._child.offsetHeight) / 2  : 0 \r\n        // padTop = this.textFitRef.props.children==='    ' ? 3:padTop\r\n        // this.headerRef.style['padding-top'] = padTop + 'px'\r\n        // this.textFitRef._child.contentEditable=this.props.forPublish? false: events[i].fact.aggregated && events[i].fact.aggregatedFact ? false : true\r\n        // this.textFitRef._child.spellCheck=false\r\n        // this.textFitRef._child.suppressContentEditableWarning= true\r\n        // //this.textFitRef._child.contentEditable = false //设置不能编辑\r\n    }\r\n    parseCaptionStyleToEmpty = () => {\r\n        if (!this.styleHlight) {\r\n            return\r\n        }\r\n        this.styleHlight.innerHTML = \"\"\r\n    }\r\n    parseCaptionStyle(fact, caption, data) {\r\n        const { sequence, factType, index, currentLocale } = this.props\r\n        if (!this.desFitRef._child) {\r\n            return\r\n        }\r\n        if (data === undefined) {\r\n            return\r\n        }\r\n        let newScrpit = ''\r\n        let timeStr = ''\r\n        let blockValue = sequence[index][\"oriBlock\"][0][\"value\"][0]\r\n        if (factType === \"similarity\" || factType === \"frequent_pattern\" || factType === \"seasonality\") {\r\n            timeStr = data[blockValue.start] + `${currentLocale === \"en-US\" ? ' and ' : '到'}` + data[blockValue.end]\r\n        } else {\r\n            //TODO:如果子空间不为空，如果子空间为空则是整个区间范围\r\n            if (fact.subspace.length > 0) {\r\n                timeStr = data[fact.subspace[0]] + `${currentLocale === \"en-US\" ? ' and ' : '到'}` + data[fact.subspace[1]]\r\n            } else {\r\n                timeStr = data[0] + `${currentLocale === \"en-US\" ? ' and ' : '到'}` + data[data.length - 1]\r\n            }\r\n        }\r\n        if (caption.indexOf('timeline-highlight') === -1) {\r\n            newScrpit = hightlightItem(caption, timeStr)\r\n            newScrpit = hightlightItem(newScrpit, timeStr.replace('and', 'to'))\r\n        }\r\n        this.desFitRef._child.innerHTML = newScrpit\r\n        // return newScrpit\r\n    }\r\n\r\n    render() {\r\n        const { sequence, timeValue, font_min_size, insightSpec, captionId, factType, index, currentLocale } = this.props\r\n        let exportSpec = insightSpec\r\n\r\n        let caption = ''\r\n        if (insightSpec !== \"empty\" && insightSpec !== undefined) {\r\n            caption = genFactSentence(insightSpec.fact, sequence[index].oriBlock, factType, currentLocale, captionId, timeValue, sequence[index].action)\r\n            exportSpec.chart.id = 'export-' + index.toString() + '-' + factType\r\n            exportSpec.chart.width = originChartSize[factType].width\r\n            exportSpec.chart.height = originChartSize[factType].height\r\n            exportSpec.chart.showTooltip = false\r\n        }\r\n        return (\r\n            <div className='onetime' style={{ display: 'flex', flexDirection: 'column', height: '250px', outline: '3px solid' + insightColors[InsightTypeTrans[factType].toLowerCase()], outlineOffset: '-3px' }}>\r\n                <div className='vis' ref={(node) => this.visNode = node} style={{ overflow: 'hidden' }}>\r\n                    {insightSpec === \"empty\" ? null : <Chart spec={exportSpec} />}\r\n                </div>\r\n                <div className='des tl-edit' spellCheck=\"false\"\r\n                    style={{\r\n                        lineHeight: 1.5\r\n                    }}\r\n                    ref={this.styleHlight}>\r\n                    {/* {(insightSpec !== \"empty\"&&insightSpec!==undefined) ?this.parseCaptionStyle(insightSpec.fact,caption,timeValue): this.parseCaptionStyleToEmpty()} */}\r\n\r\n                    <Textfit\r\n                        key={insightSpec}\r\n                        ref={el => this.desFitRef = el}\r\n                        mode=\"multi\"\r\n                        max={14}\r\n                        style={this.computeDesScripts()}\r\n                        onReady={() => this.parseScript()}>\r\n                        {/* {(insightSpec !== \"empty\"&&insightSpec!==undefined) ?this.parseCaptionStyle(insightSpec.fact,caption,timeValue): this.parseCaptionStyleToEmpty()} */}\r\n                        {/* {genFactSentence(insightSpec.fact,factType,currentLocale,captionId,timeValue)} */}\r\n                    </Textfit>\r\n                </div>\r\n                <div className='header_type tl-edit' ref={el => this.headerRef = el} style={{ paddingTop: 0 }}>\r\n                    <Textfit\r\n                        ref={el => this.textFitRef = el}\r\n                        className=\"text\"\r\n                        mode=\"multi\"\r\n                        max={30}\r\n                        min={font_min_size}\r\n                        style={this.computeDes}\r\n                        onReady={() => this.titleFitReady()}>\r\n                        {currentLocale === \"en-US\" ? InsightTypeTrans[factType] : InsightTypeZh[factType]}\r\n                    </Textfit>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { originChartSize } from '../../../constant/ChartSize'\r\nimport Chart from '../../../insight_charts/Chart';\r\nimport _ from 'lodash';\r\nimport './FactCard.less'\r\nexport default class FactCard extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.calcuChartSize()\r\n    }\r\n    calcuChartSize(){\r\n        switch(this.props.factStyle){\r\n            case '2p3':// 每行三个\r\n                this.width=230;\r\n                break;\r\n            case '2p':\r\n                this.width=300;\r\n                break;\r\n            case '3p':\r\n                this.width=350;\r\n                break\r\n\r\n            case '4p':\r\n                this.width=400;\r\n                break\r\n\r\n            case '6p':\r\n                this.width=560;\r\n                break\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (this.visNode) {\r\n            let vis = this.visNode.children[0];\r\n            if (vis) {\r\n                let chartType = this.props.factType\r\n                let x = this.width / originChartSize[chartType].width\r\n                let y = (this.width/2+50) / originChartSize[chartType].height\r\n                vis.style.transform = `scaleX(${x})scaleY(${y})`;\r\n            }\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.visNode) {\r\n            let vis = this.visNode.children[0];\r\n            if (vis) {\r\n                let chartType = this.props.factType\r\n                let x = this.width / originChartSize[chartType].width\r\n                let y = this.height / originChartSize[chartType].height\r\n                vis.style.transform = `scaleX(${x})scaleY(${y})`;\r\n            }\r\n        }\r\n    }\r\n  render() {\r\n    const {index,factType,insightSpec}=this.props\r\n    // let origin=require('../../../insight_charts/spec/trend.json');\r\n    let exportSpec=insightSpec\r\n    exportSpec.chart.id='export-'+index+'-'+factType\r\n    exportSpec.chart.width=originChartSize[factType].width\r\n    exportSpec.chart.height=originChartSize[factType].height\r\n    exportSpec.chart.showTooltip=false\r\n    return (\r\n        <div \r\n            className='insight-fact-card'\r\n            ref={(node) => this.visNode = node}>\r\n            <Chart spec={exportSpec}/>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Textfit } from '@kyo_ago/react-textfit';\r\nimport { genFactSentence } from '../../../insight_charts/caption';\r\n\r\nexport default class Script extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.textRef = React.createRef()\r\n  }\r\n\r\n  textFitReady(textFitRef, styles) {\r\n    if (!textFitRef) return\r\n    textFitRef._parent.style.height = 'fit-content';\r\n    if (textFitRef._parent.clientHeight > parseFloat(styles['height'], 10)) {\r\n        textFitRef._parent.style['line-height'] = 1;\r\n    }\r\n    if (textFitRef._parent.clientHeight > parseFloat(styles['height'], 10)) {\r\n        textFitRef._parent.style.transform = 'scale(0.833)';\r\n    }\r\n    //TODO:文字高亮处\r\n    // textFitRef._child.innerHTML = events[i].fact.aggregated && events[i].fact.aggregatedFact ? hightlight(events[i].fact) + hightlight(events[i].fact.aggregatedFact) : hightlight(events[i].fact)\r\n    textFitRef._child.contentEditable =false\r\n    textFitRef._child.spellCheck = false\r\n    textFitRef._child.suppressContentEditableWarning = false\r\n\r\n}\r\n  computeDes(factStyle, slotHeight) {\r\n    let styles = {};\r\n    switch (factStyle) {\r\n        case '6p':\r\n            styles['height'] = `${slotHeight * 0.8}px`\r\n            break\r\n        case '4p':\r\n            styles['height'] = `${slotHeight * 0.8}px`\r\n            break\r\n        case '3p':\r\n            if (slotHeight >= 235) {\r\n                styles['width'] = '90%';\r\n                styles['height'] = `${slotHeight * 0.3}px`\r\n            } else {\r\n                styles['height'] = `${slotHeight * 0.75}px`\r\n            }\r\n            break\r\n        case '2p3':\r\n        case '2p':\r\n            if (slotHeight >= 235) {\r\n                styles['width'] = '90%';\r\n                styles['height'] = `${slotHeight * 0.3}px`\r\n            } else {\r\n                styles['height'] = `${slotHeight * 0.75}px`\r\n            }\r\n            break\r\n        default:\r\n            break\r\n    }\r\n    return styles\r\n}\r\n\r\n  render() {\r\n    const {factStyle,slotHeight,generatedScript,currentLocale,captionId,insightSpec,factType} =this.props\r\n    return (\r\n      <div \r\n      className='fs_edit factsheetSlotIn factsheetDes' \r\n      spellCheck=\"false\" \r\n      style={{ \r\n        width: slotHeight > 235 || factStyle=== '6p'  ? \"90%\" : '', \r\n        lineHeight: generatedScript.length > 100 ? generatedScript.length > 140 ? 1.1 : 1.2 : 1.5 }}>\r\n            <Textfit\r\n                ref={el => this.textRef = el}\r\n                className=\"fs_text\"\r\n                style={this.computeDes(factStyle, slotHeight)}\r\n                mode=\"multi\"\r\n                max={factStyle=== '6p' || factStyle=== '4p' ? 18 : 16}\r\n                min={10}\r\n                onReady={() => { this.textFitReady(this.textRef, this.computeDes(factStyle, slotHeight)) }}>\r\n                {genFactSentence(insightSpec.fact,factType,currentLocale,captionId)}\r\n            </Textfit>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { insightColors } from '../../../constant/RecommendedInsightColor'\r\nimport FactCard from './FactCard'\r\nimport Script from './Script'\r\nimport './FactSheetView.less'\r\nimport _ from 'lodash'\r\nimport { genFactSentence } from '../../../insight_charts/caption'\r\nlet events = [{ type: \"trend\", layout: \"4p\" }, { type: \"similarity\", layout: \"2p\" }, { type: \"seasonality\", layout: \"6p\" }]\r\nlet isHorizontal = false\r\n\r\nexport default class FactSheetView extends Component {\r\n    computePdfSize() {\r\n        let styles = {}\r\n        if (isHorizontal) {\r\n            styles['fontFamily'] = 'sans-serif';\r\n            styles['width'] = '1300px'\r\n            styles['height'] = '880px'\r\n            styles['backgroundColor'] = '#F9F8F6'\r\n            styles['position'] = 'relative'\r\n        } else {\r\n            styles['fontFamily'] = 'sans-serif';\r\n            styles['width'] = '825px'\r\n            styles['height'] = '1166px'\r\n            styles['backgroundColor'] = '#F9F8F6'\r\n            styles['position'] = 'relative'\r\n        }\r\n        return styles\r\n    }\r\n    calcuFactStyle = (sequence) => {\r\n        if (sequence.length === 0) return\r\n        function addOne(arr, res, final) {\r\n            if (arr.length === 0) {\r\n                final.push(res);\r\n                return\r\n            }\r\n            _.range(1, 4).forEach((i) => {\r\n                let c = arr.slice(0, i);\r\n                if (c.length < i) return\r\n                let temp_arr = arr.slice(i)\r\n                let res_temp = [...res]\r\n                res_temp.push(c)\r\n                addOne(temp_arr, res_temp, final)\r\n            })\r\n        }\r\n        let _res = [], result = [];\r\n        addOne(_.range(0, sequence.length), _res, result)\r\n        result = result.filter((r) => {\r\n            return r.length <= _.max([r.length > 2 ? 2 : 1, Math.round(sequence.length / 2)])\r\n        })\r\n        let _result = result.filter((r) => {return r.length <= 5})\r\n        if (_result.length !== 0) { // 可以塞下5行\r\n            result = _result\r\n        }\r\n        \r\n\r\n\r\n        let slen = sequence.length\r\n        //每行3个的行数\r\n        let lineThree = Math.floor(slen / 3)\r\n        //每行2个的行数\r\n        let lineTwo = Math.floor(slen % 3 / 2)\r\n        //每行1个的行数\r\n        let lineOne = slen % 3 % 2\r\n        for(let i=0;i<slen;i++){\r\n            if(i<lineThree*3){\r\n                sequence[i][\"layout\"]=\"2p3\"\r\n            }else if(i<(lineThree*3+lineTwo*2)){\r\n                sequence[i][\"layout\"]=\"3p\"\r\n            }else{\r\n                sequence[i][\"layout\"]=\"6p\"\r\n            }\r\n        }\r\n        //计算每行的高度\r\n        let slotHeight = 0\r\n        switch (lineThree + lineTwo + lineOne) {\r\n            case 1:\r\n                slotHeight = 980\r\n                break;\r\n            case 2:\r\n                slotHeight = 480\r\n                break;\r\n            case 3:\r\n                slotHeight = 313.333\r\n                break;\r\n            case 4:\r\n                slotHeight = 230\r\n                break;\r\n            case 5:\r\n                slotHeight = 200\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return {slotHeight:slotHeight,sequence:sequence};\r\n    }\r\n    render() {\r\n        //TODO:这个height是会随之变化的\r\n        \r\n        const { currentLocale } = this.props.location.state\r\n        let sequence = this.props.location.state.sequence\r\n        // 去除掉sequence中的空card\r\n        sequence = sequence.filter((insight, i) => insight.type !== \"empty\")\r\n        let result=this.calcuFactStyle(sequence)\r\n        let slotHeight = result.slotHeight\r\n        sequence=result.sequence\r\n        return (\r\n            <div className=\"fsPDF\" id=\"PDF\" style={this.computePdfSize()}>\r\n                <div style={{ height: \"55px\", alignItems: 'center', display: 'flex' }}>\r\n                    <div className=\"factsheetContent\" style={{ paddingTop: '20px', maxWidth: \"100%\" }}>\r\n                        <h1 className=\"factsheetTitle fs_edit\">\r\n                            {\"Indicators\"}\r\n                        </h1>\r\n                    </div>\r\n                </div>\r\n                <div style={{ height: \"25px\", alignItems: 'center', display: 'flex' }}>\r\n                    <div className=\"factsheetContent\" style={{ paddingTop: \"20px\", maxWidth: \"100%\" }}>\r\n                        <p className=\"factsheetSubTitle fs_edit\">\r\n                            {\"Data scope:[2003/03/17-2003/07/11]]\"}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={\"factsheetContent\"} style={{ marginLeft: '', height: 'calc(100% - 125px)' }}>\r\n                    {\r\n                        sequence.map((item, i) =>\r\n                            <div key={i} className={`factsheetSlot factsheetSlot_${item.layout}`} style={{ height: `${slotHeight}px`, marginTop: \"20px\", boxShadow: `inset 0 0 0 2px ${insightColors[item.type]}, 0 0 0 1px ${insightColors[item.type]}` }}>\r\n                                <div className='factsheetSlotIn'>\r\n                                    <div className='factsheetSlotType text-uppercase' >\r\n                                        {item.type}\r\n                                    </div>\r\n                                    <div className=\"factsheetSlotContent\" style={{ height: `${slotHeight - 50}px`, flexDirection: slotHeight > 235 || item.layout === '4p' || item.layout === '6p' ? 'column' : 'row' }}>\r\n                                        <Script \r\n                                            generatedScript={item.type} \r\n                                            slotHeight={slotHeight} \r\n                                            factStyle={item.layout}\r\n                                            currentLocale={currentLocale}\r\n                                            captionId={item.captionId}\r\n                                            insightSpec={item.spec}\r\n                                            factType={item.type}\r\n                                            {...this.props}>\r\n\r\n                                        </Script>\r\n                                        <div className='factsheetSlotIn factsheetVis' style={{ transform: 'translate(0px,-15px)scale(0.9)' }}>\r\n                                            <FactCard\r\n                                                index={i}\r\n                                                factStyle={item.layout}\r\n                                                factType={item.type}\r\n                                                insightSpec={item.spec}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='factsheetSlotId text-uppercase' >\r\n                                    {i + 1}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                </div>\r\n                <div className=\"fs-powerby\" style={{ height: \"25px\" }}>\r\n                    <div className=\"fs-logo\"></div>\r\n                    <div style={{ display: 'inline-block' }}>Powered By Calliope</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","export default {\r\n    \"-1\": \"#B0C4DE\",\r\n    \"0\": \"#FF69B4\",\r\n    \"1\": \"#9932CC\",\r\n    \"2\": \"#8A2BE2\",\r\n    \"3\": \"#1E90FF\",\r\n    \"4\": \"#3CB371\",\r\n    \"5\": \"#7cb518\",\r\n    \"6\": \"#CD853F\",\r\n    \"7\": \"#CD5C5C\",\r\n    \"8\": \"#8f2d56\",\r\n    \"9\": \"#d81159\"\r\n}","import React, { Component } from 'react'\r\nimport { insightColors } from '../../../constant/RecommendedInsightColor'\r\nimport Draggable from 'react-draggable';\r\nimport './StorylineWebView.less'\r\nimport TimeLineSlot from './TimeLineSlot';\r\nimport ActionColor from '../../../constant/ActionColor';\r\nimport ActionType from '../../../constant/ActionType';\r\nimport InsightTypeTrans from '../../../constant/InsightTypeTrans';\r\nimport InsightTypeZh from '../../../constant/InsightTypeZh';\r\nimport ActionTypeZh from '../../../constant/ActionTypeZh';\r\n// const factTypeIncluced = [\"trend\", \"frequent_pattern\", \"seasonality\", \"univariate_distribution\"]\r\n\r\nconst notVisable = 0,\r\n    lessVisable = 0.2,\r\n    fullVisable = 0.8\r\nexport default class StorylineWebView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.titleRef = React.createRef();\r\n        this.lastItem = React.createRef()\r\n        this.firstItem = React.createRef()\r\n        this.olRef = React.createRef();\r\n        this.onetimeRef = {};\r\n        this.state = {\r\n            timelineWidth: 0,\r\n            leftOpacity: lessVisable,\r\n            rightOpacity: fullVisable,\r\n            activeDrags: 0,\r\n            timelineTransform: 0,\r\n            minFontSizeTitle: 18,\r\n            containerHeight: this.props.visContainerSize.height - 320\r\n        }\r\n    }\r\n    // drag\r\n    onStart = () => {\r\n        // let perv_activeDrags = this.state.activeDrags\r\n        // this.setState({ activeDrags: ++perv_activeDrags });\r\n    };\r\n\r\n    onStop = () => {\r\n        // let perv_activeDrags = this.state.activeDrags\r\n        // this.setState({ activeDrags: --perv_activeDrags });\r\n    };\r\n\r\n    onDrag = () => {\r\n        // this._checkVisibility();\r\n    }\r\n    moving = (direction) => {\r\n        let sign = direction === 'left' ? '+' : '-';\r\n        let _whichOpacity = direction + 'Opacity'\r\n        if (this.state[_whichOpacity] === lessVisable) return\r\n        let scrolling = 280;\r\n        let tl = this.olRef;\r\n        const tlStyle = getComputedStyle(tl);\r\n        //   add more browser prefixes if needed here\r\n        const tlTransform = tlStyle.getPropertyValue(\"-webkit-transform\") || tlStyle.getPropertyValue(\"transform\");\r\n        let values;\r\n        if (tlTransform === 'none') {\r\n            values = parseInt(`${sign}${scrolling}`);\r\n        }\r\n        else {\r\n            values = parseInt(tlTransform.split(\",\")[4]) + parseInt(`${sign}${scrolling}`);\r\n        }\r\n        this.setState({ timelineTransform: values });\r\n        this.olRef.transform = `translateX(${values}px)`\r\n        setTimeout(() => {\r\n            this._checkVisibility();\r\n        }, 1000)\r\n\r\n    }\r\n    isElementInViewport = (el, firstOrLast) => {\r\n        if (!el) return false\r\n        const rect = el.getBoundingClientRect();\r\n        const parent = el.parentNode.parentNode.parentNode;\r\n        const rect_p = parent.getBoundingClientRect();\r\n        if (firstOrLast === 'last') {\r\n            return (\r\n                rect.right <= rect_p.right\r\n            );\r\n        } else {\r\n            return (\r\n                rect.left >= rect_p.left\r\n            );\r\n        }\r\n\r\n    }\r\n    _checkVisibility = () => {\r\n        let last_item = this.lastItem;\r\n        if (this.isElementInViewport(last_item, 'last')) {\r\n            this.setState({\r\n                rightOpacity: lessVisable\r\n            })\r\n        } else {\r\n            this.setState({\r\n                rightOpacity: fullVisable\r\n            })\r\n        }\r\n        let first_item = this.firstItem;\r\n        if (this.isElementInViewport(first_item, 'first')) {\r\n            this.setState({\r\n                leftOpacity: lessVisable\r\n            })\r\n        } else {\r\n            this.setState({\r\n                leftOpacity: fullVisable\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        const { currentLocale, timeValue } = this.props.location.state\r\n        let sequence = this.props.location.state.sequence\r\n        // 去除掉sequence中的空card\r\n        sequence = sequence.filter((insight, i) => insight.type !== \"empty\")\r\n        //解析factTypeList:\r\n        let factTypeIncluced = []\r\n        let actionIncluded = []\r\n        for (let item in sequence) {\r\n            if (!factTypeIncluced.includes(sequence[item].type)) {\r\n                factTypeIncluced.push(sequence[item].type)\r\n            }\r\n            if (item !== \"0\") {\r\n                if (sequence[item].hasOwnProperty(\"action\") && sequence[item].action != undefined) {\r\n                    if (!actionIncluded.includes(sequence[item].action)) {\r\n                        console.log(item, sequence[item])\r\n                        actionIncluded.push(sequence[item].action)\r\n                        // if(sequence[item].action===-1)actionIncluded.push(\"no action\")\r\n                        // else actionIncluded.push(ActionType[sequence[item].action.toSting()])\r\n                    }\r\n                } else {\r\n                    if (!actionIncluded.includes(-1)) {\r\n                        actionIncluded.push(-1)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        console.log(actionIncluded)\r\n        let actions = []\r\n        for (let item in sequence) {\r\n            if (item !== 0) {\r\n                if (sequence[item].hasOwnProperty(\"action\") && sequence[item].action != undefined) {\r\n                    actions.push(sequence[item].action)\r\n                } else {\r\n                    actions.push(-1)\r\n                }\r\n            }\r\n        }\r\n\r\n        const dragHandlers = { onStart: this.onStart, onStop: this.onStop, onDrag: this.onDrag };\r\n        console.log(sequence)\r\n        return (\r\n            <div\r\n                style={{\r\n                    height: `${this.state.containerHeight}px`,\r\n                    position: 'relative',\r\n                    paddingTop: (this.state.containerHeight - 380) / 2 + 'px',\r\n                    paddingBottom: (this.state.containerHeight - 380) / 2 + 'px'\r\n                }}>\r\n                <div style={{ display: 'flex' }} className='export-sequence-line'>\r\n                    {sequence.length !== 0 && sequence[0] !== undefined && <div className={`btn-arrow ${this.state.leftOpacity === fullVisable ? 'enabledBtn' : ''}`} style={{ opacity: this.state.leftOpacity }} onClick={() => this.moving('left')}><svg style={{ margin: 'auto', transform: 'scale(0.8)' }} viewBox=\"64 64 896 896\" focusable=\"false\" data-icon=\"left\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 0 0 0 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z\"></path></svg> </div>}\r\n                    <div style={{ width: '90%' }} className=\"content timeline\">\r\n                        {/* <ReactResizeDetector handleWidth onResize={this.onResize} /> */}\r\n                        <Draggable axis=\"x\" cancel=\".tl-edit\" {...dragHandlers} enableUserSelectHack={true}>\r\n                            <div>\r\n                                {sequence.length !== 0 && sequence[0] !== undefined && <ol ref={el => this.olRef = el} style={{ transform: `translateX(${this.state.timelineTransform}px)` }}>\r\n                                    {sequence.map((insight, i) => {\r\n                                        if (i === 0)\r\n                                            return <li\r\n                                                key={i}\r\n                                                ref={el => this.firstItem = el}\r\n                                                className={InsightTypeTrans[insight.type].toLowerCase()}\r\n                                                style={{ backgroundImage: `linear-gradient(to right, ${ActionColor[actions[i].toString()]} , ${ActionColor[actions[i].toString()]})` }}\r\n                                            // style={{ backgroundImage: `linear-gradient(to right, ${insightColors[sequence[i].type]} , ${insightColors[sequence[i + 1].type]})` }}\r\n                                            >\r\n                                                <TimeLineSlot sequence={sequence} timeValue={timeValue} currentLocale={currentLocale} index={i} insightSpec={insight.spec} captionId={insight.captionId} factType={insight.type} font_min_size={20} {...this.props} passOnClick={this.handleClickDiv}></TimeLineSlot>\r\n                                            </li>\r\n                                        return <li\r\n                                            key={i}\r\n                                            className={InsightTypeTrans[insight.type].toLowerCase()}\r\n                                            style={{ backgroundImage: `linear-gradient(to right, ${ActionColor[actions[i].toString()]} , ${ActionColor[actions[i].toString()]})` }}\r\n                                        // style={{ backgroundImage: `linear-gradient(to right, ${insightColors[sequence[i - 1].type]} , ${insightColors[sequence[i].type]})` }} \r\n                                        >\r\n                                            <TimeLineSlot sequence={sequence} timeValue={timeValue} currentLocale={currentLocale} index={i} insightSpec={insight.spec} captionId={insight.captionId} factType={insight.type} font_min_size={20} {...this.props} passOnClick={this.handleClickDiv}></TimeLineSlot>\r\n                                        </li>\r\n                                    })}\r\n                                    {/* <li\r\n                                        style={{ backgroundImage: `linear-gradient(to right, ${ActionColor[\"-1\"]} , ${ActionColor[\"-1\"]}` }}\r\n                                        style={{ backgroundImage: `linear-gradient(to right, ${insightColors[sequence[sequence.length - 1].type]} , ${insightColors[sequence[sequence.length - 1].type]})` }}\r\n                                    ></li> */}\r\n                                    <li ref={el => this.lastItem = el}></li>\r\n                                </ol>}\r\n                            </div>\r\n                        </Draggable>\r\n                    </div>\r\n                    {sequence.length !== 0 && sequence[0] !== undefined && <div className={`btn-arrow ${this.state.rightOpacity === fullVisable ? 'enabledBtn' : ''}`} style={{ opacity: this.state.rightOpacity }} onClick={() => this.moving('right')}><svg style={{ margin: 'auto', transform: 'scale(0.8)' }} viewBox=\"64 64 896 896\" focusable=\"false\" data-icon=\"left\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M765.7 486.8L314.9 134.7A7.97 7.97 0 0 0 302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 0 0 0-50.4z\"></path></svg></div>}\r\n                </div>\r\n                <div className=\"legends\" style={{ width: '100%' }}>\r\n                    {\r\n                        factTypeIncluced.map((type, index) => {\r\n                            return <div className=\"legend\" key={index}>\r\n                                <span className='dot' style={{ backgroundColor: `${insightColors[InsightTypeTrans[type].toLowerCase()]}` }}></span>\r\n                                <div className='dot_text'>{currentLocale === \"en-US\" ? InsightTypeTrans[type] : InsightTypeZh[type]}</div>\r\n                            </div>\r\n                        })\r\n                    }\r\n                    {\r\n                        actionIncluded.length > 0 ? <div className='legend-space'></div> : null\r\n                    }\r\n                    {\r\n                        actionIncluded.map((action, index) => {\r\n                            return <div className=\"legend\" key={index}>\r\n                                <span className='line' style={{ backgroundColor: `${ActionColor[action.toString()]}` }}></span>\r\n                                <div className='dot_text'>{currentLocale === \"en-US\" ? ActionType[action.toString()] : ActionTypeZh[action.toString()]}</div>\r\n                            </div>\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport StorylineWebView from './StorylineWebView/StorylineWebView'\r\nimport FactSheetView from './FactSheetView/FactSheetView'\r\nimport './ExportPage.less'\r\nexport default class ExportPage extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render() {\r\n        let storyview =\r\n            <StorylineWebView\r\n                forPublish={true}\r\n                visContainerSize={{width:750,height:669}}\r\n                {...this.props}\r\n            />\r\n        return (\r\n            <div style={{ height: '100%', display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\r\n                {storyview}\r\n                {/* <div style={{height:'90%',position:'relative'}}>\r\n                    <div className='factsheetContainer'>\r\n                        <FactSheetView {...this.props}/>\r\n                    </div>\r\n                </div> */}\r\n            </div>\r\n        )\r\n    }\r\n}"],"sourceRoot":""}