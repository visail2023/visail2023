{"version":3,"sources":["action/type.js","constant/OperationType.js","action/userAction.js","constant/ConvertType.js","insight_charts/spec sync /^/.//.*/.json$","pages lazy /^/.//.*$/ groupOptions: {} namespace object","reducer/story.js","reducer/user.js","constant/initSequence.js","reducer/series.js","reducer/index.js","store.js","components/LazyLoadingView/LazyLoading.js","components/LazyLoadingView/index.js","App.js","serviceWorker.js","index.js"],"names":["UPLOAD_DATA","GENERATE_STORY","UPDATE_PROGRESS","UPDATE_USER_INFO","UPDATE_USER_OPERATION","UPDATE_CONVERT_TYPE","UPDATE_LOCALE","SET_PARSED_FILE_DATA","SET_SCALE","SET_TASK","SET_SEQUENCE","SET_REDUNDANT","ADD_SEGMENTS_INSIGHTS","CHANGE_BTN_STATE","ADD_EMPTY_CARD","CHANGE_CRAD_LOCATION","REMOVE_CARD","FIX_CARD","SET_SELECTED_CARD_INDEX","SET_SELECTED_RECOMMEND_CARD","REMOVE_RECOMMEND_CARD","ADD_RECOMMEND_LIST","SET_POP_CARD_START","SET_POP_INSIGHTS","SET_TOOLTIP_CONTAINER","SET_CONFIGURE_COLUMNS","SET_CONFIGURE_TYPE","SET_CONFIGURE_TIME","SET_CONFIGURE_BREAKDOWN","UPDATE_FILEURL_AND_DATA","UPDATE_COLUMNS_AND_RANGE","SET_PROCESS_TIME","SET_PROCESS_GRANULARITY","SET_PROCESS_COLUMNS","OperationType","BEFORE_UPLOAD","UPLOADIND","UPLOADED","GENERATING","GENERATED","FAILED","FILE_LARGE","ADDING","ADD_FAILED","ADDED","PUBLISHED","updateUserInfo","userInfo","type","ActionType","updateOperation","operateState","updateCovertType","convertType","updateLocale","currentLocale","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","webpackAsyncContext","Promise","then","ids","all","slice","t","initialState","file_url","originFileUrl","originData","originSchema","fileName","title","data","schema","method","facts","relations","maxStoryLength","timeLimit","information","resultCoverage","chartDiversity","aggregationLevel","rewardWeight","logicality","diversity","integrity","generateProgress","Cookies","get","JSON","parse","username","uid","isLogin","ConvertType","FACTSHEET","getSpecByType","oriSpec","require","_","cloneDeep","columnsName","originColumnName","originDataRange","originTimeValue","processTime","processGranularity","processColumns","granularityName","dataRange","timeColumnName","timeValue","drawScale","task","chartScale","chartMargin","rightBtnState","isPopInsightCard","sequence","redundantRecommend","selectedCardIndex","selectedRecommendCardIndex","currentPopInsightList","tooltipContainer","configureInsightColumns","configureInsightTime","configureInsightType","configureInsightBreakdown","segmentInsightsStorage","combineReducers","story","state","action","newState","assign","coverage","Number","totalLength","currentLength","toFixed","user","series","columnList","granularity","timeCol","columns","timeValues","scale","recommededList","cardData","emptyFact","splice","index","console","log","length","filter","i","fixedSenquence","spec","factType","recommendList","oriBlock","captionId","cardDatas","origin","target","tmp","tempDetails","measures","fact","measure","push","field","start","end","breakdown","insightCard","newSenquence","oriSequence","oriDetials","insights","tempSegmentStorage","segment_key","segment_insights","container","insightType","time","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","thunk","store","createStore","rootReducer","applyMiddleware","configureStore","LazyLoading","this","props","isLoading","error","Component","Loading","url","Loadable","loader","loading","locales","App","initDone","initDefaultLang","loadLocales","lang","intl","init","setState","MyRoute","MyComponent","rest","render","routerProps","onChangeLocaleListener","exact","path","React","connect","dispatch","userAction","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"sIAAe,KAEXA,YAAa,cAEbC,eAAgB,iBAChBC,gBAAiB,kBAEjBC,iBAAkB,mBAClBC,sBAAuB,wBACvBC,oBAAqB,sBACrBC,cAAe,gBAKfC,qBAAsB,uBACtBC,UAAW,YAGXC,SAAU,WAIVC,aAAc,eACdC,cAAe,gBACfC,sBAAuB,wBAEvBC,iBAAkB,mBAClBC,eAAgB,iBAChBC,qBAAsB,uBACtBC,YAAa,cACbC,SAAU,WACVC,wBAAyB,0BAIzBC,4BAA6B,8BAC7BC,sBAAuB,wBACvBC,mBAAoB,qBAGpBC,mBAAoB,qBACpBC,iBAAkB,mBAElBC,sBAAuB,wBAGvBC,sBAAuB,wBACvBC,mBAAoB,qBACpBC,mBAAoB,qBACpBC,wBAAyB,0BAEzBC,wBAAyB,0BACzBC,yBAA0B,2BAE1BC,iBAAkB,mBAClBC,wBAAyB,0BACzBC,oBAAqB,wB,yDC3CVC,IAdO,CAClBC,cAAe,EACfC,UAAW,EACXC,SAAU,EACVC,WAAY,EACZC,UAAW,EACXC,OAAQ,EACRC,WAAY,EACZC,OAAQ,EACRC,WAAY,EACZC,MAAO,EACPC,UAAW,K,6BCXf,mJAGaC,EAAiB,SAACC,GAAQ,MAAM,CACzCC,KAAMC,IAAW9C,iBACjB4C,aAGSG,EAAkB,SAACC,GAAY,MAAM,CAC9CH,KAAMC,IAAW7C,sBACjB+C,iBAGSC,EAAmB,SAACC,GAAW,MAAM,CAC9CL,KAAMC,IAAW5C,oBACjBgD,gBAGSC,EAAe,SAACC,GAAa,MAAM,CAC5CP,KAAMC,IAAW3C,cACjBiD,mB,6BCpBW,KACX,UAAa,YACb,UAAa,YACb,WAAc,aACd,WAAc,aACd,GAAM,KACN,WAAa,e,2BCNjB,IAAIC,EAAM,CACT,yBAA0B,GAC1B,8BAA+B,GAC/B,oBAAqB,GACrB,qBAAsB,GACtB,0BAA2B,GAC3B,mCAAoC,GACpC,8BAA+B,GAC/B,gBAAiB,GACjB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,oBAAqB,GACrB,kBAAmB,GACnB,eAAgB,GAChB,iCAAkC,GAClC,4BAA6B,IAI9B,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,I,035BCrCpB,IAAIH,EAAM,CACT,aAAc,CACb,GACA,EACA,EACA,EACA,EACA,EACA,GAED,cAAe,CACd,GACA,EACA,EACA,EACA,EACA,EACA,GAED,sBAAuB,CACtB,GACA,EACA,EACA,EACA,EACA,EACA,IAED,yBAA0B,CACzB,GACA,EACA,EACA,EACA,EACA,EACA,IAED,2BAA4B,CAC3B,IACA,EACA,IAED,0BAA2B,CAC1B,GACA,EACA,EACA,EACA,EACA,EACA,GAED,2BAA4B,CAC3B,GACA,EACA,EACA,EACA,EACA,EACA,GAED,uCAAwC,CACvC,GACA,EACA,EACA,EACA,EACA,EACA,IAED,0CAA2C,CAC1C,GACA,EACA,EACA,EACA,EACA,EACA,IAED,4CAA6C,CAC5C,IACA,EACA,IAED,gCAAiC,CAChC,GACA,EACA,EACA,EACA,EACA,EACA,GAED,mCAAoC,CACnC,GACA,EACA,EACA,EACA,EACA,EACA,GAED,mBAAoB,CACnB,GACA,EACA,EACA,EACA,EACA,EACA,GAED,sBAAuB,CACtB,GACA,EACA,EACA,EACA,EACA,EACA,GAED,0BAA2B,CAC1B,GACA,EACA,EACA,GACA,EACA,EACA,IAED,6BAA8B,CAC7B,GACA,EACA,EACA,GACA,EACA,EACA,IAED,+BAAgC,CAC/B,IACA,EACA,IAED,sCAAuC,CACtC,GACA,EACA,EACA,EACA,IAED,yCAA0C,CACzC,GACA,EACA,EACA,EACA,IAED,2CAA4C,CAC3C,IACA,EACA,IAED,2CAA4C,CAC3C,GACA,EACA,EACA,EACA,EACA,IAED,8CAA+C,CAC9C,GACA,EACA,EACA,EACA,EACA,IAED,gDAAiD,CAChD,IACA,EACA,IAED,oCAAqC,CACpC,GACA,EACA,EACA,IAED,uCAAwC,CACvC,GACA,EACA,EACA,IAED,4CAA6C,CAC5C,IACA,EACA,IAED,iDAAkD,CACjD,GACA,EACA,EACA,GACA,EACA,EACA,IAED,oDAAqD,CACpD,GACA,EACA,EACA,GACA,EACA,EACA,IAED,sDAAuD,CACtD,IACA,EACA,IAED,6CAA8C,CAC7C,GACA,EACA,EACA,EACA,EACA,IAED,gDAAiD,CAChD,GACA,EACA,EACA,EACA,EACA,IAED,aAAc,CACb,GACA,EACA,EACA,EACA,EACA,EACA,GAED,cAAe,CACd,GACA,EACA,EACA,EACA,EACA,EACA,GAED,iCAAkC,CACjC,GACA,EACA,EACA,IAED,oCAAqC,CACpC,GACA,EACA,EACA,IAED,sCAAuC,CACtC,IACA,EACA,IAED,sBAAuB,CACtB,GACA,EACA,EACA,EACA,EACA,EACA,IAED,yBAA0B,CACzB,GACA,EACA,EACA,EACA,EACA,EACA,IAED,2BAA4B,CAC3B,IACA,EACA,IAED,wBAAyB,CACxB,GACA,EACA,EACA,EACA,EACA,EACA,IAED,yBAA0B,CACzB,GACA,EACA,EACA,EACA,EACA,EACA,IAED,mCAAoC,CACnC,GACA,EACA,EACA,EACA,EACA,EACA,IAED,sCAAuC,CACtC,GACA,EACA,EACA,EACA,EACA,EACA,IAED,wCAAyC,CACxC,IACA,EACA,IAED,8BAA+B,CAC9B,GACA,EACA,EACA,EACA,EACA,EACA,IAED,iCAAkC,CACjC,GACA,EACA,EACA,EACA,EACA,EACA,IAED,mBAAoB,CACnB,GACA,EACA,EACA,EACA,EACA,EACA,GAED,sBAAuB,CACtB,GACA,EACA,EACA,EACA,EACA,EACA,GAED,4BAA6B,CAC5B,GACA,EACA,EACA,IAED,+BAAgC,CAC/B,GACA,EACA,EACA,IAED,iCAAkC,CACjC,IACA,EACA,IAED,gBAAiB,CAChB,IACA,EACA,KAGF,SAA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","file":"static/js/main.dac3ee50.chunk.js","sourcesContent":["export default {\n    // Data\n    UPLOAD_DATA: 'UPLOAD_DATA',\n    // Story\n    GENERATE_STORY: 'GENERATE_STORY',\n    UPDATE_PROGRESS: 'UPDATE_PROGRESS',//生成进度\n    //user\n    UPDATE_USER_INFO: 'UPDATE_USER_INFO',\n    UPDATE_USER_OPERATION: 'UPDATE_USER_OPERATION',\n    UPDATE_CONVERT_TYPE: 'UPDATE_CONVERT_TYPE',\n    UPDATE_LOCALE: 'UPDATE_LOCALE',\n\n\n\n    //init edit\n    SET_PARSED_FILE_DATA: 'SET_PARSED_FILE_DATA',\n    SET_SCALE: 'SET_SCALE',\n\n    //before generate\n    SET_TASK: 'SET_TASK',\n\n\n    //time seires\n    SET_SEQUENCE: \"SET_SEQUENCE\",\n    SET_REDUNDANT: \"SET_REDUNDANT\",\n    ADD_SEGMENTS_INSIGHTS: \"ADD_SEGMENTS_INSIGHTS\",\n\n    CHANGE_BTN_STATE: \"CHANGE_BTN_STATE\",\n    ADD_EMPTY_CARD: \"ADD_EMPTY_CARD\",\n    CHANGE_CRAD_LOCATION: \"CHANGE_CRAD_LOCATION\",\n    REMOVE_CARD: \"REMOVE_CARD\",\n    FIX_CARD: \"FIX_CARD\",\n    SET_SELECTED_CARD_INDEX: \"SET_SELECTED_CARD_INDEX\",\n\n\n    //recommend list\n    SET_SELECTED_RECOMMEND_CARD: \"SET_SELECTED_RECOMMEND_CARD\",\n    REMOVE_RECOMMEND_CARD: \"REMOVE_RECOMMEND_CARD\",\n    ADD_RECOMMEND_LIST: 'ADD_RECOMMEND_LIST',\n\n    //pop insight card\n    SET_POP_CARD_START: \"SET_POP_CARD_START\",\n    SET_POP_INSIGHTS: \"SET_POP_INSIGHTS\",\n\n    SET_TOOLTIP_CONTAINER: 'SET_TOOLTIP_CONTAINER',\n\n    //configure columsn\n    SET_CONFIGURE_COLUMNS: 'SET_CONFIGURE_COLUMNS',\n    SET_CONFIGURE_TYPE: 'SET_CONFIGURE_TYPE',\n    SET_CONFIGURE_TIME: 'SET_CONFIGURE_TIME',\n    SET_CONFIGURE_BREAKDOWN: 'SET_CONFIGURE_BREAKDOWN',\n\n    UPDATE_FILEURL_AND_DATA: 'UPDATE_FILEURL_AND_DATA',\n    UPDATE_COLUMNS_AND_RANGE: 'UPDATE_COLUMNS_AND_RANGE',\n\n    SET_PROCESS_TIME: 'SET_PROCESS_TIME',\n    SET_PROCESS_GRANULARITY: 'SET_PROCESS_GRANULARITY',\n    SET_PROCESS_COLUMNS: 'SET_PROCESS_COLUMNS'\n\n}","const OperationType = {\n    BEFORE_UPLOAD: 0,\n    UPLOADIND: 1,\n    UPLOADED: 2,\n    GENERATING: 3,\n    GENERATED: 4,\n    FAILED: 5,\n    FILE_LARGE: 6,\n    ADDING: 7,\n    ADD_FAILED: 8,\n    ADDED: 9,\n    PUBLISHED: 10,\n}\n\nexport default OperationType;","import ActionType from './type';\n\n\nexport const updateUserInfo = (userInfo) => ({\n    type: ActionType.UPDATE_USER_INFO,\n    userInfo\n})\n\nexport const updateOperation = (operateState) => ({\n    type: ActionType.UPDATE_USER_OPERATION,\n    operateState\n})\n\nexport const updateCovertType = (convertType) => ({\n    type: ActionType.UPDATE_CONVERT_TYPE,\n    convertType\n})\n\nexport const updateLocale = (currentLocale) => ({\n    type: ActionType.UPDATE_LOCALE,\n    currentLocale\n})","export default {\n    \"FACTSHEET\": \"Factsheet\",\n    \"DASHBOARD\": \"Dashboard\",\n    \"DATACOMICS\": \"DataComics\",\n    \"DATAVIDEOS\": \"DataVideos\",\n    \"H5\": \"H5\",\n    \"TIMESEIRES\":'TimeSeries'\n}","var map = {\n\t\"./autocorrelation.json\": 65,\n\t\"./autocorrelation_test.json\": 66,\n\t\"./clustering.json\": 67,\n\t\"./forecasting.json\": 68,\n\t\"./frequent_pattern.json\": 69,\n\t\"./multivariate_distribution.json\": 70,\n\t\"./multivariate_outlier.json\": 71,\n\t\"./origin.json\": 45,\n\t\"./origin_back.json\": 72,\n\t\"./outstanding.json\": 73,\n\t\"./seasonality.json\": 74,\n\t\"./similarity.json\": 75,\n\t\"./template.json\": 76,\n\t\"./trend.json\": 77,\n\t\"./univariate_distribution.json\": 78,\n\t\"./univariate_outlier.json\": 79\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 44;","var map = {\n\t\"./EditPage\": [\n\t\t23,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t7\n\t],\n\t\"./EditPage/\": [\n\t\t23,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t7\n\t],\n\t\"./EditPage/EditPage\": [\n\t\t52,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t12\n\t],\n\t\"./EditPage/EditPage.js\": [\n\t\t52,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t12\n\t],\n\t\"./EditPage/EditPage.less\": [\n\t\t108,\n\t\t7,\n\t\t27\n\t],\n\t\"./EditPage/EditTimeView\": [\n\t\t21,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t8\n\t],\n\t\"./EditPage/EditTimeView/\": [\n\t\t21,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t8\n\t],\n\t\"./EditPage/EditTimeView/EditTimeView\": [\n\t\t46,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t13\n\t],\n\t\"./EditPage/EditTimeView/EditTimeView.js\": [\n\t\t46,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t13\n\t],\n\t\"./EditPage/EditTimeView/EditTimeView.less\": [\n\t\t104,\n\t\t7,\n\t\t28\n\t],\n\t\"./EditPage/EditTimeView/index\": [\n\t\t21,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t8\n\t],\n\t\"./EditPage/EditTimeView/index.js\": [\n\t\t21,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t8\n\t],\n\t\"./EditPage/index\": [\n\t\t23,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t7\n\t],\n\t\"./EditPage/index.js\": [\n\t\t23,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t7\n\t],\n\t\"./ExportPage/ExportPage\": [\n\t\t56,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t5,\n\t\t4,\n\t\t17\n\t],\n\t\"./ExportPage/ExportPage.js\": [\n\t\t56,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t5,\n\t\t4,\n\t\t17\n\t],\n\t\"./ExportPage/ExportPage.less\": [\n\t\t112,\n\t\t7,\n\t\t29\n\t],\n\t\"./ExportPage/FactSheetView/FactCard\": [\n\t\t49,\n\t\t9,\n\t\t0,\n\t\t5,\n\t\t22\n\t],\n\t\"./ExportPage/FactSheetView/FactCard.js\": [\n\t\t49,\n\t\t9,\n\t\t0,\n\t\t5,\n\t\t22\n\t],\n\t\"./ExportPage/FactSheetView/FactCard.less\": [\n\t\t106,\n\t\t7,\n\t\t30\n\t],\n\t\"./ExportPage/FactSheetView/FactSheetView\": [\n\t\t53,\n\t\t9,\n\t\t0,\n\t\t5,\n\t\t4,\n\t\t15\n\t],\n\t\"./ExportPage/FactSheetView/FactSheetView.js\": [\n\t\t53,\n\t\t9,\n\t\t0,\n\t\t5,\n\t\t4,\n\t\t15\n\t],\n\t\"./ExportPage/FactSheetView/FactSheetView.less\": [\n\t\t110,\n\t\t7,\n\t\t31\n\t],\n\t\"./ExportPage/FactSheetView/Script\": [\n\t\t50,\n\t\t9,\n\t\t4,\n\t\t19\n\t],\n\t\"./ExportPage/FactSheetView/Script.js\": [\n\t\t50,\n\t\t9,\n\t\t4,\n\t\t19\n\t],\n\t\"./ExportPage/FactSheetView/logo-black.png\": [\n\t\t114,\n\t\t7,\n\t\t38\n\t],\n\t\"./ExportPage/StorylineWebView/StorylineWebView\": [\n\t\t55,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t5,\n\t\t4,\n\t\t21\n\t],\n\t\"./ExportPage/StorylineWebView/StorylineWebView.js\": [\n\t\t55,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t5,\n\t\t4,\n\t\t21\n\t],\n\t\"./ExportPage/StorylineWebView/StorylineWebView.less\": [\n\t\t109,\n\t\t7,\n\t\t32\n\t],\n\t\"./ExportPage/StorylineWebView/TimeLineSlot\": [\n\t\t48,\n\t\t9,\n\t\t0,\n\t\t5,\n\t\t4,\n\t\t18\n\t],\n\t\"./ExportPage/StorylineWebView/TimeLineSlot.js\": [\n\t\t48,\n\t\t9,\n\t\t0,\n\t\t5,\n\t\t4,\n\t\t18\n\t],\n\t\"./Homepage\": [\n\t\t24,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t9\n\t],\n\t\"./Homepage/\": [\n\t\t24,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t9\n\t],\n\t\"./Homepage/Content/ContentView\": [\n\t\t51,\n\t\t9,\n\t\t1,\n\t\t20\n\t],\n\t\"./Homepage/Content/ContentView.js\": [\n\t\t51,\n\t\t9,\n\t\t1,\n\t\t20\n\t],\n\t\"./Homepage/Content/ContentView.less\": [\n\t\t107,\n\t\t7,\n\t\t33\n\t],\n\t\"./Homepage/Homepage\": [\n\t\t54,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t14\n\t],\n\t\"./Homepage/Homepage.js\": [\n\t\t54,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t14\n\t],\n\t\"./Homepage/Homepage.less\": [\n\t\t111,\n\t\t7,\n\t\t34\n\t],\n\t\"./Homepage/PannelView\": [\n\t\t22,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t6,\n\t\t11\n\t],\n\t\"./Homepage/PannelView/\": [\n\t\t22,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t6,\n\t\t11\n\t],\n\t\"./Homepage/PannelView/PannelView\": [\n\t\t47,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t6,\n\t\t16\n\t],\n\t\"./Homepage/PannelView/PannelView.js\": [\n\t\t47,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t6,\n\t\t16\n\t],\n\t\"./Homepage/PannelView/PannelView.less\": [\n\t\t105,\n\t\t7,\n\t\t35\n\t],\n\t\"./Homepage/PannelView/index\": [\n\t\t22,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t6,\n\t\t11\n\t],\n\t\"./Homepage/PannelView/index.js\": [\n\t\t22,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t6,\n\t\t11\n\t],\n\t\"./Homepage/index\": [\n\t\t24,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t9\n\t],\n\t\"./Homepage/index.js\": [\n\t\t24,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t9\n\t],\n\t\"./PublishPage/PublishPage\": [\n\t\t57,\n\t\t9,\n\t\t1,\n\t\t23\n\t],\n\t\"./PublishPage/PublishPage.js\": [\n\t\t57,\n\t\t9,\n\t\t1,\n\t\t23\n\t],\n\t\"./PublishPage/PublishPage.less\": [\n\t\t113,\n\t\t7,\n\t\t36\n\t],\n\t\"./common.less\": [\n\t\t115,\n\t\t7,\n\t\t37\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(2).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 84;\nmodule.exports = webpackAsyncContext;","import ActionType from '../action/type';\n// import { genTitle } from \"../sentencer/index\";\n\nconst initialState = {\n    file_url:'',\n    originFileUrl:\"\",\n    originData:[],\n    originSchema:[],\n\n    fileName: '.csv',\n    title: '',\n    data: [],\n    schema: [],\n    method: 'sig',\n    facts: [],\n    relations: [],\n    maxStoryLength: 6,\n    timeLimit: 2000,// for each iteration\n    information: 40, // default 50 bits for 6 facts\n    resultCoverage: 1,\n    chartDiversity: 0,\n    aggregationLevel: 0,\n    rewardWeight: {\n        logicality: 0.33,\n        diversity: 0.33,\n        integrity: 0.33,\n    },\n    generateProgress: 0,\n};\n\nexport default (state = initialState, action) => {\n    const newState = Object.assign({}, state);\n    switch (action.type) {\n        case ActionType.GENERATE_STORY:\n            newState.facts = action.facts;\n            newState.relations = action.relations;\n            newState.resultCoverage = action.coverage;\n            return newState;\n        case ActionType.UPDATE_PROGRESS:\n            newState.generateProgress = Number(((action.totalLength - action.currentLength) / action.totalLength).toFixed(2) * 100);\n            return newState;\n        case ActionType.UPLOAD_DATA:\n            newState.fileName = action.fileName;\n            newState.facts = [];\n            newState.relations = [];\n            newState.originSchema = action.schema;\n            newState.originData = action.data;\n            newState.originFileUrl = action.file_url;\n            // newState.schema = action.schema;\n            // newState.data = action.data;\n            // newState.file_url = action.file_url;\n            return newState\n        case ActionType.UPDATE_FILEURL_AND_DATA:\n            newState.schema = action.schema;\n            newState.data = action.data;\n            newState.file_url = action.file_url;\n            return newState\n        default:\n            break;\n    }\n    return newState;\n}","import ActionType from '../action/type';\nimport Cookies from 'js-cookie';\nimport OperationType from '@/constant/OperationType'\nimport ConvertType from '@/constant/ConvertType'\n\nlet userInfo = Cookies.get(\"userInfo\") && JSON.parse(Cookies.get(\"userInfo\")) ? JSON.parse(Cookies.get(\"userInfo\")) : {\n    username: \"\",\n    uid: -1\n}\n\nconst initialState = {\n    isLogin: userInfo.uid !== -1,\n    userInfo: userInfo,\n    operateState: OperationType.BEFORE_UPLOAD,// BEFORE_UPLOAD  UPLOADIND UPLOADED FILE_LARGE  GENERATING GENERATED PUBLISHED,\n    convertType: ConvertType.FACTSHEET,\n    currentLocale: ''\n}\n\nexport default (state = initialState, action) => {\n    const newState = Object.assign({}, state);\n    switch (action.type) {\n        case ActionType.UPDATE_USER_INFO:\n            newState.userInfo = action.userInfo;\n            if (action.userInfo.uid === -1) {\n                newState.isLogin = false\n            } else {\n                newState.isLogin = true\n            }\n            return newState;\n\n        case ActionType.UPDATE_USER_OPERATION:\n            newState.operateState = action.operateState\n            return newState;\n        case ActionType.UPDATE_CONVERT_TYPE:\n            newState.convertType = action.convertType\n            return newState;\n        case ActionType.UPDATE_LOCALE:\n            newState.currentLocale = action.currentLocale\n            return newState;\n        default:\n            break;\n    }\n    return newState;\n}","import _ from 'lodash';\r\nexport default [\r\n    {\r\n        \"spec\":getSpecByType(\"trend\"),\r\n        \"type\": \"trend\",\r\n        \"captionId\":0,\r\n        \"oriBlock\":[{ \"field\": \"FailureRate\", \"value\": [{ \"start\": 200, \"end\": 280 }] }],\r\n        \"recommendList\": [\r\n                   ]\r\n    },\r\n    {\r\n        \"spec\":getSpecByType(\"univariate_distribution\"),\r\n        \"type\": \"univariate_distribution\",\r\n        \"captionId\":0,\r\n        \"oriBlock\":[{ \"field\": \"FailureRate\", \"value\": [{ \"start\": 200, \"end\": 280 }] }],\r\n        \"recommendList\": [\r\n                   ]\r\n    },\r\n    {\r\n        \"spec\":getSpecByType(\"seasonality\"),\r\n        \"type\": \"seasonality\",\r\n        \"captionId\":0,\r\n        \"oriBlock\":[{ \"field\": \"FailureRate\", \"value\": [{ \"start\": 200, \"end\": 280 }] }],\r\n        \"recommendList\": [\r\n                   ]\r\n    },\r\n    {\r\n        \"spec\":getSpecByType(\"frequent_pattern\"),\r\n        \"type\": \"frequent_pattern\",\r\n        \"captionId\":0,\r\n        \"oriBlock\":[{ \"field\": \"FailureRate\", \"value\": [{ \"start\": 200, \"end\": 280 }] }],\r\n        \"recommendList\": [\r\n                   ]\r\n    },\r\n    {\r\n        \"spec\":getSpecByType(\"similarity\"),\r\n        \"type\": \"similarity\",\r\n        \"captionId\":0,\r\n        \"oriBlock\":[{ \"field\": \"FailureRate\", \"value\": [{ \"start\": 200, \"end\": 280 }] }],\r\n        \"recommendList\": [\r\n                   ]\r\n    },\r\n    {\r\n        \"spec\":getSpecByType(\"multivariate_distribution\"),\r\n        \"type\": \"multivariate_distribution\",\r\n        \"captionId\":1,\r\n        \"oriBlock\":[{ \"field\": \"FailureRate\", \"value\": [{ \"start\": 40, \"end\": 80 }] },{ \"field\": \"CPUUsage\", \"value\": [{ \"start\": 40, \"end\": 80 }] }, { \"field\": \"GPUUsage\", \"value\": [{ \"start\": 40, \"end\": 80 }] }] ,\r\n        \"recommendList\": [\r\n            { \"spec\":getSpecByType(\"trend\"),\"type\": \"trend\", \"block\": [{ \"field\": \"GPUUsage\", \"value\": [{ \"start\": 99, \"end\": 200 }] }] },\r\n            { \"spec\":getSpecByType(\"seasonality\"),\"type\": \"seasonality\", \"block\": [{ \"field\": \"FailureRate\", \"value\": [{ \"start\": 300, \"end\": 370 }] }] },\r\n            { \"spec\":getSpecByType(\"univariate_distribution\"),\"type\": \"univariate_distribution\", \"block\": [{ \"field\": \"CPUUsage\", \"value\": [{ \"start\": 200, \"end\": 280 }] }] }\r\n        ]\r\n    },\r\n    {\r\n        \"spec\":getSpecByType(\"univariate_outlier\"),\r\n        \"type\": \"univariate_outlier\",\r\n        \"captionId\":0,\r\n        \"oriBlock\":[{ \"field\": \"FailureRate\", \"value\": [{ \"start\": 200, \"end\": 280 }] }],\r\n        \"recommendList\": [\r\n                   ]\r\n    },\r\n    {\r\n        \"spec\":getSpecByType(\"multivariate_outlier\"),\r\n        \"type\": \"multivariate_outlier\",\r\n        \"captionId\":0,\r\n        \"oriBlock\":[{ \"field\": \"FailureRate\", \"value\": [{ \"start\": 200, \"end\": 280 }] }],\r\n        \"recommendList\": [\r\n                   ]\r\n    },\r\n    {\r\n        \"spec\":getSpecByType(\"multivariate_distribution\"),\r\n        \"type\": \"multivariate_distribution\",\r\n        \"captionId\":0,\r\n        \"oriBlock\":[{ \"field\": \"FailureRate\", \"value\": [{ \"start\": 200, \"end\": 280 }] }],\r\n        \"recommendList\": [\r\n                   ]\r\n    },\r\n    {\r\n        \"spec\":getSpecByType(\"autocorrelation\"),\r\n        \"type\": \"autocorrelation\",\r\n        \"captionId\":0,\r\n        \"oriBlock\":[{ \"field\": \"FailureRate\", \"value\": [{ \"start\": 200, \"end\": 280 }] }],\r\n        \"recommendList\": [\r\n                   ]\r\n    },\r\n    {\r\n        \"spec\":getSpecByType(\"outstanding\"),\r\n        \"type\": \"outstanding\",\r\n        \"captionId\":0,\r\n        \"oriBlock\":[{ \"field\": \"FailureRate\", \"value\": [{ \"start\": 200, \"end\": 280 }] }],\r\n        \"recommendList\": [\r\n                   ]\r\n    }\r\n    // {\r\n    //     \"spec\":getSpecByType(\"outstanding\"),\r\n    //     \"type\": \"outstanding\",\r\n    //     \"captionId\":2,\r\n    //     \"oriBlock\":[{ \"field\": \"CPUUsage\", \"value\": [{ \"start\": 20, \"end\": 100 }] }],\r\n    //     \"recommendList\": [\r\n    //         { \"spec\":getSpecByType(\"univariate_distribution\"),\"type\": \"univariate_distribution\", \"block\": [{ \"field\": \"CPUUsage\", \"value\": [{ \"start\": 300, \"end\": 400 }] }] },\r\n    //         { \"spec\":getSpecByType(\"seasonality\"),\"type\": \"seasonality\", \"block\": [{ \"field\": \"GPUUsage\", \"value\": [{ \"start\": 400, \"end\": 480 }] }] }\r\n    //     ]\r\n    // },\r\n    // {\r\n    //     \"spec\":getSpecByType(\"autocorrelation\"),\r\n    //     \"type\": \"autocorrelation\",\r\n    //     \"captionId\":0,\r\n    //     \"oriBlock\":[{ \"field\": \"GPUUsage\", \"value\": [{ \"start\": 300, \"end\": 360 }] }],\r\n    //     \"recommendList\": [\r\n    //     ]\r\n    // },\r\n    // {\r\n    //     \"spec\":getSpecByType(\"multivariate_distribution\"),\r\n    //     \"type\": \"multivariate_distribution\",\r\n    //     \"captionId\":0,\r\n    //     \"oriBlock\":[{ \"field\": \"FailureRate\", \"value\": [{ \"start\": 200, \"end\": 280 }] }],\r\n    //     \"recommendList\": [\r\n    //                ]\r\n    // }\r\n    // {\r\n    //     \"spec\":getSpecByType(\"similarity\"),\r\n    //     \"type\": \"similarity\",\r\n    //     \"captionId\":1,\r\n    //     \"oriBlock\":[{ \"field\": \"GPUUsage\", \"value\": [{ \"start\": 400, \"end\": 450 }] }],\r\n    //     \"recommendList\": [\r\n    //         { \"spec\":getSpecByType(\"seasonality\"),\"type\": \"seasonality\", \"block\": [{ \"field\": \"FailureRate\", \"value\": [{ \"start\": 450, \"end\": 556 }] }] },\r\n    //         { \"spec\":getSpecByType(\"univariate_outlier\"),\"type\": \"univariate_outlier\", \"block\": [{ \"field\": \"FailureRate\", \"value\": [{ \"start\": 5, \"end\": 60 }] }, { \"field\": \"GPUUsage\", \"value\": [{ \"start\": 5, \"end\": 60 }] }, { \"field\": \"CPUUsage\", \"value\": [{ \"start\": 5, \"end\": 60 }] }] },\r\n    //         { \"spec\":getSpecByType(\"multivariate_outlier\"),\"type\": \"multivariate_outlier\", \"block\": [{ \"field\": \"GPUUsage\", \"value\": [{ \"start\": 8, \"end\": 90 }] }] },\r\n    //         { \"spec\":getSpecByType(\"outstanding\"),\"type\": \"outstanding\", \"block\": [{ \"field\": \"CPUUsage\", \"value\": [{ \"start\": 20, \"end\": 199 }] }] },\r\n    //         { \"spec\":getSpecByType(\"autocorrelation\"),\"type\": \"autocorrelation\", \"block\": [{ \"field\": \"CPUUsage\", \"value\": [{ \"start\": 20, \"end\": 199 }] }] }\r\n\r\n    //     ]\r\n    // }\r\n]\r\n\r\nfunction getSpecByType(type) {\r\n    let oriSpec = require('../insight_charts/spec/' + type + '.json');\r\n    let spec = _.cloneDeep(oriSpec);\r\n    return spec\r\n}","import ActionType from '../action/type';\r\nimport initSequence from '../constant/initSequence';\r\n\r\n\r\nconst initialState = {\r\n    //init edit\r\n    columnsName: [],\r\n    originColumnName: [],\r\n    originDataRange: [],\r\n    originTimeValue: [],\r\n\r\n    processTime: [],\r\n    processGranularity: \"\",\r\n    processColumns: [],\r\n\r\n    granularityName: [],\r\n    dataRange: [],\r\n    timeColumnName: \"\",\r\n    timeValue: [],\r\n    drawScale: '',\r\n\r\n    //before generate\r\n    task: -1,\r\n    //chartScale\r\n    chartScale: 1500 / 500,\r\n    chartMargin: 80,\r\n\r\n    rightBtnState: \"Start\",\r\n    isPopInsightCard: false,\r\n    sequence: [],\r\n    redundantRecommend: [],\r\n\r\n    selectedCardIndex: -1,\r\n    //card columns,type,timeRange\r\n\r\n    selectedRecommendCardIndex: -1,\r\n\r\n    currentPopInsightList: [],\r\n    tooltipContainer: '',\r\n    configureInsightColumns: [],\r\n    configureInsightTime: [],\r\n    configureInsightType: '',\r\n    configureInsightBreakdown: '',\r\n\r\n    segmentInsightsStorage: {}\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    const newState = Object.assign({}, state);\r\n    switch (action.type) {\r\n        //--------------- init edit pannel-----------\r\n        case ActionType.SET_PARSED_FILE_DATA:\r\n            newState.originColumnName = action.columnList;\r\n            newState.granularityName = action.granularity;\r\n            newState.originDataRange = action.dataRange;\r\n            newState.timeColumnName = action.timeCol;\r\n            newState.originTimeValue = action.timeValue;\r\n            return newState;\r\n\r\n        case ActionType.UPDATE_COLUMNS_AND_RANGE:\r\n            newState.columnsName = action.columns;\r\n            // newState.granularityName = action.granularity;\r\n            newState.dataRange = action.dataRange;\r\n            // newState.timeColumnName = action.timeCol;\r\n            newState.timeValue = action.timeValues;\r\n            return newState;\r\n\r\n        case ActionType.SET_SCALE:\r\n            newState.drawScale = action.scale\r\n            return newState\r\n\r\n        //--------------before generate---------------\r\n        case ActionType.SET_TASK:\r\n            newState.task = action.task\r\n            return newState\r\n        //--------------time series--------------\r\n        case ActionType.SET_SEQUENCE:\r\n            newState.sequence = action.sequence;\r\n            return newState;\r\n        case ActionType.SET_REDUNDANT:\r\n            newState.redundantRecommend = action.recommededList;\r\n            return newState;\r\n\r\n        case ActionType.CHANGE_BTN_STATE:\r\n            newState.rightBtnState = action.state;\r\n            return newState;\r\n        case ActionType.ADD_EMPTY_CARD:\r\n            let cardData = newState.sequence.slice();\r\n            // if (action.index === newState.sequence.length) {\r\n            //     recommededList = newState.redundantRecommend\r\n            // } else {\r\n            //     recommededList = newState.sequence[action.index][\"recommendList\"]\r\n            // }\r\n            let emptyFact = {\r\n                \"action\": -1,\r\n                \"spec\": \"empty\",\r\n                \"type\": \"empty\",\r\n                \"recommendList\": []\r\n            }\r\n            cardData.splice(action.index, 0, emptyFact);\r\n            newState.sequence = cardData;\r\n            console.log(newState.sequence)\r\n            return newState\r\n        case ActionType.REMOVE_CARD:\r\n            if (newState.sequence.length > 0) {\r\n                newState.sequence = newState.sequence.filter((_, i) => i !== action.index)\r\n            }\r\n            return newState;\r\n        case ActionType.FIX_CARD:\r\n            let fixedSenquence = newState.sequence.slice()\r\n            if (fixedSenquence.length > 0) {\r\n                fixedSenquence.splice(action.index, 1, { spec: action.spec, type: action.factType, recommendList: action.recommendList, oriBlock: action.oriBlock, captionId: action.captionId })\r\n            }\r\n            newState.sequence = fixedSenquence\r\n            return newState;\r\n        case ActionType.CHANGE_CRAD_LOCATION:\r\n            let cardDatas = _.cloneDeep(newState.sequence);\r\n            let origin = action.origin;\r\n            let target = action.target;\r\n            let tmp = cardDatas[origin]\r\n            cardDatas[origin] = cardDatas[target]\r\n            cardDatas[target] = tmp\r\n            newState.sequence = cardDatas;\r\n            return newState;\r\n        case ActionType.SET_SELECTED_CARD_INDEX:\r\n            newState.selectedCardIndex = action.index\r\n            //更新card details：columns、type、timeRange\r\n            let tempDetails = {}\r\n            tempDetails[\"columns\"] = []\r\n            tempDetails[\"type\"] = \"\"\r\n            tempDetails[\"range\"] = [0, 0]\r\n            tempDetails[\"breakdown\"] = \"\"\r\n            console.log(newState.sequence)\r\n            if (newState.sequence[action.index][\"spec\"] !== \"empty\" || action.index === -1) {\r\n                //set columns\r\n                let measures = newState.sequence[action.index].spec.fact.measure\r\n                measures.map((measure, i) => {\r\n                    tempDetails[\"columns\"].push(measure.field)\r\n                })\r\n                //set type\r\n                tempDetails[\"type\"] = newState.sequence[action.index].type\r\n                //set time range\r\n                // tempDetails[\"range\"] = newState.sequence[action.index].spec.fact.subspace\r\n                tempDetails[\"range\"] = [newState.sequence[action.index].oriBlock[0][\"value\"][0].start, newState.sequence[action.index].oriBlock[0][\"value\"][0].end]\r\n                tempDetails[\"breakdown\"] = newState.sequence[action.index].spec.fact.breakdown[0].granularity\r\n            }\r\n            newState.configureInsightColumns = tempDetails[\"columns\"]\r\n            newState.configureInsightTime = tempDetails[\"range\"]\r\n            newState.configureInsightType = tempDetails[\"type\"]\r\n            newState.configureInsightBreakdown = tempDetails[\"breakdown\"]\r\n            //重置右侧推荐列表，selectedRecommendCardIndex=-1\r\n            newState.selectedRecommendCardIndex = -1\r\n            return newState\r\n        //--------recommend list-----------\r\n        case ActionType.SET_SELECTED_RECOMMEND_CARD:\r\n            newState.selectedRecommendCardIndex = action.index\r\n            return newState\r\n        case ActionType.REMOVE_RECOMMEND_CARD:\r\n            let insightCard = newState.selectedCardIndex\r\n            let newSenquence = newState.sequence.slice()\r\n            if (newSenquence[insightCard].recommendList.length > 0) {\r\n                newSenquence[insightCard].recommendList.splice(action.index, 1)\r\n            }\r\n            newState.sequence = newSenquence\r\n            return newState\r\n        case ActionType.ADD_RECOMMEND_LIST:\r\n            let oriSequence = newState.sequence.slice()\r\n            if (oriSequence[action.index][\"spec\"] === \"empty\") {\r\n                if (oriSequence.length > 0) {\r\n                    let oriDetials = oriSequence[action.index]\r\n                    oriSequence.splice(action.index, 1, { action: oriDetials.action, spec: \"empty\", type: \"empty\", recommendList: action.recommendList })\r\n                }\r\n            } else {\r\n                if (oriSequence.length > 0) {\r\n                    let oriDetials = oriSequence[action.index]\r\n                    oriSequence.splice(action.index, 1, { action: oriDetials.action, spec: oriDetials.spec, type: oriDetials.type, recommendList: action.recommendList, oriBlock: oriDetials.oriBlock, captionId: oriDetials.captionId })\r\n                }\r\n            }\r\n            newState.sequence = oriSequence\r\n            return newState;\r\n\r\n        case ActionType.SET_POP_INSIGHTS:\r\n            newState.currentPopInsightList = action.insights\r\n            return newState\r\n        //------pop card--------\r\n        case ActionType.ADD_SEGMENTS_INSIGHTS:\r\n            let tempSegmentStorage = _.cloneDeep(newState.segmentInsightsStorage);\r\n            tempSegmentStorage[action.segment_key] = action.segment_insights\r\n            newState.segmentInsightsStorage = tempSegmentStorage\r\n            return newState\r\n\r\n        case ActionType.SET_POP_CARD_START:\r\n            newState.isPopInsightCard = action.state\r\n            return newState\r\n\r\n        case ActionType.SET_TOOLTIP_CONTAINER:\r\n            newState.tooltipContainer = action.container\r\n            return newState\r\n\r\n        //----configure card----------\r\n        case ActionType.SET_CONFIGURE_COLUMNS:\r\n            newState.configureInsightColumns = action.columns\r\n            return newState\r\n\r\n        case ActionType.SET_CONFIGURE_TIME:\r\n            newState.configureInsightTime = [action.start, action.end]\r\n            return newState\r\n\r\n        case ActionType.SET_CONFIGURE_TYPE:\r\n            newState.configureInsightType = action.insightType\r\n            return newState\r\n\r\n        case ActionType.SET_CONFIGURE_BREAKDOWN:\r\n            newState.configureInsightBreakdown = action.breakdown\r\n            return newState\r\n\r\n        //----------file process--------------\r\n        case ActionType.SET_PROCESS_TIME:\r\n            newState.processTime = action.time\r\n            return newState\r\n        case ActionType.SET_PROCESS_GRANULARITY:\r\n            newState.processGranularity = action.granularity\r\n            return newState\r\n        case ActionType.SET_PROCESS_COLUMNS:\r\n            newState.processColumns = action.columns\r\n            return newState\r\n        default:\r\n            break;\r\n    }\r\n    return newState;\r\n}","import { combineReducers } from 'redux';\nimport story from './story';\nimport user from './user';\nimport series from './series';\n\nexport default combineReducers({\n    story,\n    user,\n    series\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n\nconst middlewares = [\n    thunk\n  ]\n  \n  if (process.env.NODE_ENV === 'development' && process.env.TARO_ENV !== 'quickapp') {\n    middlewares.push(require('redux-logger').createLogger())\n  }\n\nfunction configureStore(initialState = {}) {\n    return createStore(\n        rootReducer,\n        initialState,\n        composeEnhancers(\n            applyMiddleware(...middlewares)\n        )\n    );\n}\n\nconst store = configureStore();\n\nexport default store;","import React, { Component } from \"react\";\n\n\nexport default class LazyLoading extends Component {\n    render() {\n        const { isLoading, error } = this.props\n        // Handle the loading state\n        if (isLoading) {\n            return <div>Loading...</div>;\n        }\n        // Handle the error state\n        else if (error) {\n            return <div>Sorry, there was a problem loading the page.</div>;\n        }\n        else {\n            return null;\n        }\n    }\n};\n\n","import LazyLoading from '@/components/LazyLoadingView/LazyLoading'\nimport Loadable from 'react-loadable'\n\n//React Router Code Spliting \nlet Loading = (url) => {\n    return Loadable({\n        loader: () => import(`@/pages/${url}`),\n        loading: LazyLoading\n    });\n}\nexport default Loading","import React from 'react';\nimport { connect } from 'react-redux'\nimport * as userAction from './action/userAction'\nimport LazyLoading from '@/components/LazyLoadingView/index'\nimport intl from 'react-intl-universal'\n\nimport './App.less'\nimport './common.less'\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  //useParams\n} from \"react-router-dom\";\n// common locale data\nrequire('intl/locale-data/jsonp/en.js');\nrequire('intl/locale-data/jsonp/zh.js');\n\n// app locale data\nconst locales = {\n  \"en-US\": require('./locales/en-US.json'),\n  \"zh-CN\": require('./locales/zh-CN.json'),\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateLocale: (currentLocale) => dispatch(userAction.updateLocale(currentLocale)),\n  }\n}\nconst mapStateToProps = (state) => ({\n})\nclass App extends React.Component {\n\n  state = {\n    initDone: false,\n    currentLocale: ''\n  }\n\n  loadLocales(lang) {\n    // init method will load CLDR locale data according to currentLocale\n    // react-intl-universal is singleton, so you should init it only once in your app\n    intl.init({\n      currentLocale: lang,\n      locales,\n    })\n      .then(() => {\n        this.props.updateLocale(lang)\n        // After loading CLDR locale data, start to render\n        this.setState(\n          { initDone: true, currentLocale: lang });\n      });\n  }\n\n  initDefaultLang = () => {\n    // let userDefaultLang = navigator.language || navigator.userLanguage;//常规浏览器语言和IE浏览器\n    // let lang = userDefaultLang.substr(0, 2);//截取lang前2位字符\n    // if (lang === 'zh') {\n    //   lang = \"zh-CN\"\n    // } else {\n    //   lang = \"en-US\"\n    // }\n    // set init lang==\"en-US\"\n    let lang=\"en-US\"\n    if (this.state.currentLocale !== lang) {\n      this.loadLocales(lang)\n    }\n  }\n\n  componentDidMount() {\n    this.initDefaultLang()\n  }\n  render() {\n    const { initDone, currentLocale } = this.state;\n\n    const MyRoute = ({ MyComponent, ...rest }) => {\n      return (\n        <Route\n          {...rest}\n          render={routerProps => (\n            <MyComponent\n              intl={intl}\n              initDone={initDone}\n              currentLocale={currentLocale}\n              onChangeLocaleListener={lang => this.loadLocales(lang)}\n              {...routerProps} ></MyComponent>)\n          } />\n      )\n    }\n\n    return (\n      <Router>\n        <Switch>\n          <MyRoute exact path='/edit' MyComponent={LazyLoading('EditPage/index')} />\n          <MyRoute exact path='/export' MyComponent={LazyLoading('ExportPage/ExportPage')} />\n          <MyRoute exact path='/publish' MyComponent={LazyLoading('PublishPage/PublishPage')} />\n          <MyRoute exact path='/' MyComponent={LazyLoading('Homepage/index')} />\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store';\nimport './index.css';\nimport 'calliope-chart/lib/font.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}